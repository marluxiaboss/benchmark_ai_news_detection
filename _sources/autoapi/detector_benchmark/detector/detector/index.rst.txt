detector_benchmark.detector.detector
====================================

.. py:module:: detector_benchmark.detector.detector


Classes
-------

.. autoapisummary::

   detector_benchmark.detector.detector.Detector


Module Contents
---------------

.. py:class:: Detector

   Bases: :py:obj:`abc.ABC`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: detect(texts: list[str], batch_size: int, detection_threshold: float = 0.0) -> tuple[list[int], list[float], list[int]]
      :abstractmethod:


      Detect the watermark in the texts.

      Parameters:
      ----------
          texts: list[str]
              The texts to detect the watermark in
          batch_size: int
              The batch size
          detection_threshold: float
              The threshold to use for the detection

      Returns:
      -------
          tuple[list[int], list[float], list[int]]
              The predictions, the logits, and the predictions at the threshold



