Search.setIndex({"alltitles": {"API Reference": [[52, null]], "Attributes": [[37, "attributes"], [53, "attributes"]], "Class details": [[61, null]], "Classes": [[0, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [34, "classes"], [35, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [53, "classes"], [54, "classes"]], "Configure the benchmark": [[69, null], [69, null], [70, null], [70, null]], "Configure the watermark:": [[69, "configure-the-watermark"]], "Extra parameters depending on the attack:": [[69, "extra-parameters-depending-on-the-attack"]], "Features": [[56, "features"]], "Functions": [[2, "functions"], [4, "functions"], [14, "functions"], [28, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [33, "functions"], [36, "functions"], [37, "functions"], [51, "functions"], [55, "functions"]], "Generate the benchmark": [[62, "generate-the-benchmark"]], "Getting Started": [[62, null]], "How to add a dataset": [[64, null]], "How to add a new LLM for generating the benchmark": [[66, null]], "How to add a new detector on the detection benchmark": [[65, null]], "How to add a watermarking scheme on the benchmark": [[67, null]], "How to add an attack": [[63, null]], "How to add...": [[68, null]], "How to extend the benchmark": [[68, null]], "How to generate the benchmark": [[69, null]], "How to generate the benchmark with watermarking": [[69, "how-to-generate-the-benchmark-with-watermarking"]], "How to generate the benchmark without watermarking": [[69, "how-to-generate-the-benchmark-without-watermarking"]], "How to test a detector": [[70, null]], "Installation": [[62, "installation"]], "LLM Detector benchmark": [[56, null]], "List of supported LLMs for generation": [[59, null]], "List of supported detectors": [[58, null]], "List of supported evasion attacks": [[57, null]], "List of supported generators, detectors, attacks and watermarks": [[71, null]], "List of supported watermarking schemes": [[60, null]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [41, "module-contents"], [45, "module-contents"], [47, "module-contents"], [48, "module-contents"], [50, "module-contents"], [51, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"]], "Package Contents": [[6, "package-contents"], [12, "package-contents"], [20, "package-contents"], [27, "package-contents"], [34, "package-contents"], [40, "package-contents"], [42, "package-contents"], [44, "package-contents"], [46, "package-contents"], [49, "package-contents"]], "Parameters:": [[3, "parameters"], [4, "parameters"], [4, "id1"], [4, "id3"], [5, "parameters"], [6, "parameters"], [6, "id1"], [7, "parameters"], [8, "parameters"], [10, "parameters"], [10, "id1"], [10, "id2"], [10, "id3"], [10, "id4"], [10, "id5"], [11, "parameters"], [11, "id1"], [12, "parameters"], [12, "id1"], [12, "id3"], [12, "id4"], [12, "id5"], [12, "id6"], [12, "id7"], [12, "id9"], [12, "id11"], [12, "id14"], [12, "id16"], [13, "parameters"], [15, "parameters"], [15, "id1"], [15, "id2"], [15, "id3"], [18, "parameters"], [19, "parameters"], [19, "id1"], [20, "parameters"], [20, "id1"], [20, "id2"], [20, "id3"], [20, "id4"], [20, "id6"], [20, "id8"], [20, "id10"], [20, "id12"], [20, "id14"], [21, "parameters"], [22, "parameters"], [22, "id1"], [26, "parameters"], [26, "id1"], [27, "parameters"], [27, "id1"], [28, "parameters"]], "Returns:": [[3, "returns"], [4, "returns"], [4, "id2"], [4, "id4"], [6, "returns"], [7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [10, "id6"], [11, "returns"], [11, "id2"], [12, "returns"], [12, "id2"], [12, "id8"], [12, "id10"], [12, "id12"], [12, "id13"], [12, "id15"], [12, "id17"], [13, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [19, "id2"], [20, "returns"], [20, "id5"], [20, "id7"], [20, "id9"], [20, "id11"], [20, "id13"], [20, "id15"], [20, "id16"], [20, "id17"], [21, "returns"], [22, "returns"], [22, "id2"], [24, "returns"], [27, "returns"], [28, "returns"]], "Specific parameters for each detectors": [[70, "specific-parameters-for-each-detectors"]], "Submodules": [[6, "submodules"], [12, "submodules"], [20, "submodules"], [23, "submodules"], [27, "submodules"], [34, "submodules"], [40, "submodules"], [42, "submodules"], [43, "submodules"], [44, "submodules"], [46, "submodules"], [49, "submodules"]], "Subpackages": [[23, "subpackages"], [43, "subpackages"]], "Supported LLM detectors": [[58, null]], "Supported LLMs": [[59, null]], "Supported Watermarking schemes": [[60, null]], "Supported evasion attacks": [[57, null]], "Supported list": [[71, null]], "Test a detector on the created benchmark": [[62, "test-a-detector-on-the-created-benchmark"]], "Test a watermark detector": [[70, "test-a-watermark-detector"]], "Test a zero-shot or trained detector": [[70, "test-a-zero-shot-or-trained-detector"]], "configs": [[0, null]], "detector_benchmark": [[23, null]], "detector_benchmark.conf": [[1, null]], "detector_benchmark.create_dataset": [[2, null]], "detector_benchmark.dataset_loader": [[6, null]], "detector_benchmark.dataset_loader.cnn_dataset": [[3, null]], "detector_benchmark.dataset_loader.dataset_loader_utils": [[4, null]], "detector_benchmark.dataset_loader.fake_true_dataset": [[5, null]], "detector_benchmark.detector": [[12, null]], "detector_benchmark.detector.bert_detector": [[7, null]], "detector_benchmark.detector.detector": [[8, null]], "detector_benchmark.detector.detector_loader": [[9, null]], "detector_benchmark.detector.fast_detect_gpt": [[10, null]], "detector_benchmark.detector.gpt_zero_detector": [[11, null]], "detector_benchmark.detector.watermark_detector": [[13, null]], "detector_benchmark.generate_mappings": [[14, null]], "detector_benchmark.generation": [[20, null]], "detector_benchmark.generation.article_generator": [[15, null]], "detector_benchmark.generation.attack_loader": [[16, null]], "detector_benchmark.generation.gen_loader": [[17, null]], "detector_benchmark.generation.gen_params_attack": [[18, null]], "detector_benchmark.generation.generator": [[19, null]], "detector_benchmark.generation.prompt_attack": [[21, null]], "detector_benchmark.generation.prompt_paraphrasing_attack": [[22, null]], "detector_benchmark.pipeline": [[27, null]], "detector_benchmark.pipeline.create_dataset_pipeline": [[24, null]], "detector_benchmark.pipeline.experiment_pipeline": [[25, null]], "detector_benchmark.pipeline.experiment_test_detector_pipeline": [[26, null]], "detector_benchmark.pipeline.pipeline_utils": [[28, null]], "detector_benchmark.pipeline.text_quality_pipeline": [[29, null]], "detector_benchmark.run_human_eval": [[30, null]], "detector_benchmark.run_human_eval_plus": [[31, null]], "detector_benchmark.test_detector": [[32, null]], "detector_benchmark.test_text_quality": [[33, null]], "detector_benchmark.text_quality_evaluation": [[34, null]], "detector_benchmark.text_quality_evaluation.scorer": [[35, null]], "detector_benchmark.text_quality_evaluation.scorer_utils": [[36, null]], "detector_benchmark.watermark": [[43, null]], "detector_benchmark.watermark.auto_watermark": [[37, null]], "detector_benchmark.watermark.base": [[38, null]], "detector_benchmark.watermark.dip": [[40, null]], "detector_benchmark.watermark.dip.dip": [[39, null]], "detector_benchmark.watermark.exp": [[42, null]], "detector_benchmark.watermark.exp.exp": [[41, null]], "detector_benchmark.watermark.kgw": [[44, null]], "detector_benchmark.watermark.kgw.kgw": [[45, null]], "detector_benchmark.watermark.sir": [[46, null]], "detector_benchmark.watermark.sir.sir": [[47, null]], "detector_benchmark.watermark.sir.transform_model": [[48, null]], "detector_benchmark.watermark.sweet": [[49, null]], "detector_benchmark.watermark.sweet.sweet": [[50, null]], "gen_utils": [[51, null]], "openai_utils": [[53, null]], "transformers_config": [[54, null]], "utils": [[55, null]]}, "docnames": ["autoapi/configs/index", "autoapi/detector_benchmark/conf/index", "autoapi/detector_benchmark/create_dataset/index", "autoapi/detector_benchmark/dataset_loader/cnn_dataset/index", "autoapi/detector_benchmark/dataset_loader/dataset_loader_utils/index", "autoapi/detector_benchmark/dataset_loader/fake_true_dataset/index", "autoapi/detector_benchmark/dataset_loader/index", "autoapi/detector_benchmark/detector/bert_detector/index", "autoapi/detector_benchmark/detector/detector/index", "autoapi/detector_benchmark/detector/detector_loader/index", "autoapi/detector_benchmark/detector/fast_detect_gpt/index", "autoapi/detector_benchmark/detector/gpt_zero_detector/index", "autoapi/detector_benchmark/detector/index", "autoapi/detector_benchmark/detector/watermark_detector/index", "autoapi/detector_benchmark/generate_mappings/index", "autoapi/detector_benchmark/generation/article_generator/index", "autoapi/detector_benchmark/generation/attack_loader/index", "autoapi/detector_benchmark/generation/gen_loader/index", "autoapi/detector_benchmark/generation/gen_params_attack/index", "autoapi/detector_benchmark/generation/generator/index", "autoapi/detector_benchmark/generation/index", "autoapi/detector_benchmark/generation/prompt_attack/index", "autoapi/detector_benchmark/generation/prompt_paraphrasing_attack/index", "autoapi/detector_benchmark/index", "autoapi/detector_benchmark/pipeline/create_dataset_pipeline/index", "autoapi/detector_benchmark/pipeline/experiment_pipeline/index", "autoapi/detector_benchmark/pipeline/experiment_test_detector_pipeline/index", "autoapi/detector_benchmark/pipeline/index", "autoapi/detector_benchmark/pipeline/pipeline_utils/index", "autoapi/detector_benchmark/pipeline/text_quality_pipeline/index", "autoapi/detector_benchmark/run_human_eval/index", "autoapi/detector_benchmark/run_human_eval_plus/index", "autoapi/detector_benchmark/test_detector/index", "autoapi/detector_benchmark/test_text_quality/index", "autoapi/detector_benchmark/text_quality_evaluation/index", "autoapi/detector_benchmark/text_quality_evaluation/scorer/index", "autoapi/detector_benchmark/text_quality_evaluation/scorer_utils/index", "autoapi/detector_benchmark/watermark/auto_watermark/index", "autoapi/detector_benchmark/watermark/base/index", "autoapi/detector_benchmark/watermark/dip/dip/index", "autoapi/detector_benchmark/watermark/dip/index", "autoapi/detector_benchmark/watermark/exp/exp/index", "autoapi/detector_benchmark/watermark/exp/index", "autoapi/detector_benchmark/watermark/index", "autoapi/detector_benchmark/watermark/kgw/index", "autoapi/detector_benchmark/watermark/kgw/kgw/index", "autoapi/detector_benchmark/watermark/sir/index", "autoapi/detector_benchmark/watermark/sir/sir/index", "autoapi/detector_benchmark/watermark/sir/transform_model/index", "autoapi/detector_benchmark/watermark/sweet/index", "autoapi/detector_benchmark/watermark/sweet/sweet/index", "autoapi/gen_utils/index", "autoapi/index", "autoapi/openai_utils/index", "autoapi/transformers_config/index", "autoapi/utils/index", "index", "subpages/description_lists/supported_attacks", "subpages/description_lists/supported_detectors", "subpages/description_lists/supported_generators", "subpages/description_lists/supported_watermarks", "subpages/details", "subpages/getting_started", "subpages/how_to_add/how_to_add_attack", "subpages/how_to_add/how_to_add_dataset", "subpages/how_to_add/how_to_add_detector", "subpages/how_to_add/how_to_add_generator", "subpages/how_to_add/how_to_add_watermark", "subpages/how_to_add_index", "subpages/how_to_generate", "subpages/how_to_test_detector", "subpages/supported_list_index"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "filenames": ["autoapi/configs/index.rst", "autoapi/detector_benchmark/conf/index.rst", "autoapi/detector_benchmark/create_dataset/index.rst", "autoapi/detector_benchmark/dataset_loader/cnn_dataset/index.rst", "autoapi/detector_benchmark/dataset_loader/dataset_loader_utils/index.rst", "autoapi/detector_benchmark/dataset_loader/fake_true_dataset/index.rst", "autoapi/detector_benchmark/dataset_loader/index.rst", "autoapi/detector_benchmark/detector/bert_detector/index.rst", "autoapi/detector_benchmark/detector/detector/index.rst", "autoapi/detector_benchmark/detector/detector_loader/index.rst", "autoapi/detector_benchmark/detector/fast_detect_gpt/index.rst", "autoapi/detector_benchmark/detector/gpt_zero_detector/index.rst", "autoapi/detector_benchmark/detector/index.rst", "autoapi/detector_benchmark/detector/watermark_detector/index.rst", "autoapi/detector_benchmark/generate_mappings/index.rst", "autoapi/detector_benchmark/generation/article_generator/index.rst", "autoapi/detector_benchmark/generation/attack_loader/index.rst", "autoapi/detector_benchmark/generation/gen_loader/index.rst", "autoapi/detector_benchmark/generation/gen_params_attack/index.rst", "autoapi/detector_benchmark/generation/generator/index.rst", "autoapi/detector_benchmark/generation/index.rst", "autoapi/detector_benchmark/generation/prompt_attack/index.rst", "autoapi/detector_benchmark/generation/prompt_paraphrasing_attack/index.rst", "autoapi/detector_benchmark/index.rst", "autoapi/detector_benchmark/pipeline/create_dataset_pipeline/index.rst", "autoapi/detector_benchmark/pipeline/experiment_pipeline/index.rst", "autoapi/detector_benchmark/pipeline/experiment_test_detector_pipeline/index.rst", "autoapi/detector_benchmark/pipeline/index.rst", "autoapi/detector_benchmark/pipeline/pipeline_utils/index.rst", "autoapi/detector_benchmark/pipeline/text_quality_pipeline/index.rst", "autoapi/detector_benchmark/run_human_eval/index.rst", "autoapi/detector_benchmark/run_human_eval_plus/index.rst", "autoapi/detector_benchmark/test_detector/index.rst", "autoapi/detector_benchmark/test_text_quality/index.rst", "autoapi/detector_benchmark/text_quality_evaluation/index.rst", "autoapi/detector_benchmark/text_quality_evaluation/scorer/index.rst", "autoapi/detector_benchmark/text_quality_evaluation/scorer_utils/index.rst", "autoapi/detector_benchmark/watermark/auto_watermark/index.rst", "autoapi/detector_benchmark/watermark/base/index.rst", "autoapi/detector_benchmark/watermark/dip/dip/index.rst", "autoapi/detector_benchmark/watermark/dip/index.rst", "autoapi/detector_benchmark/watermark/exp/exp/index.rst", "autoapi/detector_benchmark/watermark/exp/index.rst", "autoapi/detector_benchmark/watermark/index.rst", "autoapi/detector_benchmark/watermark/kgw/index.rst", "autoapi/detector_benchmark/watermark/kgw/kgw/index.rst", "autoapi/detector_benchmark/watermark/sir/index.rst", "autoapi/detector_benchmark/watermark/sir/sir/index.rst", "autoapi/detector_benchmark/watermark/sir/transform_model/index.rst", "autoapi/detector_benchmark/watermark/sweet/index.rst", "autoapi/detector_benchmark/watermark/sweet/sweet/index.rst", "autoapi/gen_utils/index.rst", "autoapi/index.rst", "autoapi/openai_utils/index.rst", "autoapi/transformers_config/index.rst", "autoapi/utils/index.rst", "index.md", "subpages/description_lists/supported_attacks.md", "subpages/description_lists/supported_detectors.md", "subpages/description_lists/supported_generators.md", "subpages/description_lists/supported_watermarks.md", "subpages/details.md", "subpages/getting_started.md", "subpages/how_to_add/how_to_add_attack.md", "subpages/how_to_add/how_to_add_dataset.md", "subpages/how_to_add/how_to_add_detector.md", "subpages/how_to_add/how_to_add_generator.md", "subpages/how_to_add/how_to_add_watermark.md", "subpages/how_to_add_index.md", "subpages/how_to_generate.md", "subpages/how_to_test_detector.md", "subpages/supported_list_index.md"], "indexentries": {"__call__() (detector_benchmark.watermark.dip.dip.diplogitsprocessor method)": [[39, "detector_benchmark.watermark.dip.dip.DIPLogitsProcessor.__call__", false]], "__call__() (detector_benchmark.watermark.kgw.kgw.kgwlogitsprocessor method)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWLogitsProcessor.__call__", false]], "__call__() (detector_benchmark.watermark.sir.sir.sirlogitsprocessor method)": [[47, "detector_benchmark.watermark.sir.sir.SIRLogitsProcessor.__call__", false]], "__call__() (detector_benchmark.watermark.sweet.sweet.sweet_logitsprocessor method)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_LogitsProcessor.__call__", false]], "_apply_watermark() (detector_benchmark.watermark.dip.dip.diplogitsprocessor method)": [[39, "detector_benchmark.watermark.dip.dip.DIPLogitsProcessor._apply_watermark", false]], "_bias_greenlist_logits() (detector_benchmark.watermark.kgw.kgw.kgwlogitsprocessor method)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWLogitsProcessor._bias_greenlist_logits", false]], "_bias_greenlist_logits() (detector_benchmark.watermark.sweet.sweet.sweet_logitsprocessor method)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_LogitsProcessor._bias_greenlist_logits", false]], "_bias_logits() (detector_benchmark.watermark.sir.sir.sirlogitsprocessor method)": [[47, "detector_benchmark.watermark.sir.sir.SIRLogitsProcessor._bias_logits", false]], "_calc_greenlist_mask() (detector_benchmark.watermark.kgw.kgw.kgwlogitsprocessor method)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWLogitsProcessor._calc_greenlist_mask", false]], "_calc_greenlist_mask() (detector_benchmark.watermark.sweet.sweet.sweet_logitsprocessor method)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_LogitsProcessor._calc_greenlist_mask", false]], "_compute_z_score() (detector_benchmark.watermark.kgw.kgw.kgwutils method)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWUtils._compute_z_score", false]], "_compute_z_score() (detector_benchmark.watermark.sweet.sweet.sweet_utils method)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Utils._compute_z_score", false]], "_extract_context_code() (detector_benchmark.watermark.dip.dip.diputils method)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils._extract_context_code", false]], "_get_context_sentence() (detector_benchmark.watermark.sir.sir.sirutils method)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils._get_context_sentence", false]], "_get_dip_score() (detector_benchmark.watermark.dip.dip.diputils method)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils._get_dip_score", false]], "_get_green_token_quantile() (detector_benchmark.watermark.dip.dip.diputils method)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils._get_green_token_quantile", false]], "_get_mapping() (detector_benchmark.watermark.sir.sir.sirutils method)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils._get_mapping", false]], "_get_rng_seed() (detector_benchmark.watermark.dip.dip.diputils method)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils._get_rng_seed", false]], "_get_transform_model() (detector_benchmark.watermark.sir.sir.sirutils method)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils._get_transform_model", false]], "_seed_rng() (detector_benchmark.watermark.kgw.kgw.kgwutils method)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWUtils._seed_rng", false]], "_seed_rng() (detector_benchmark.watermark.sweet.sweet.sweet_utils method)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Utils._seed_rng", false]], "_value_transformation() (detector_benchmark.watermark.exp.exp.exputils method)": [[41, "detector_benchmark.watermark.exp.exp.EXPUtils._value_transformation", false]], "adversarial_gen_params (detector_benchmark.generation.gen_params_attack.genparamsattack attribute)": [[18, "detector_benchmark.generation.gen_params_attack.GenParamsAttack.adversarial_gen_params", false]], "adversarial_gen_params (detector_benchmark.generation.genparamsattack attribute)": [[20, "detector_benchmark.generation.GenParamsAttack.adversarial_gen_params", false]], "adversarial_prompt_config (detector_benchmark.generation.prompt_attack.promptattack attribute)": [[21, "detector_benchmark.generation.prompt_attack.PromptAttack.adversarial_prompt_config", false]], "adversarial_prompt_config (detector_benchmark.generation.promptattack attribute)": [[20, "detector_benchmark.generation.PromptAttack.adversarial_prompt_config", false]], "alpha (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.alpha", false]], "api_key (detector_benchmark.detector.gpt_zero_detector.gptzero attribute)": [[11, "detector_benchmark.detector.gpt_zero_detector.GPTZero.api_key", false]], "api_key (detector_benchmark.detector.gptzero attribute)": [[12, "detector_benchmark.detector.GPTZero.api_key", false]], "articlegenerator (class in detector_benchmark.generation)": [[20, "detector_benchmark.generation.ArticleGenerator", false]], "articlegenerator (class in detector_benchmark.generation.article_generator)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator", false]], "attack (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline attribute)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.attack", false]], "attack (detector_benchmark.pipeline.createdatasetpipeline attribute)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.attack", false]], "attack_name (detector_benchmark.generation.article_generator.articlegenerator attribute)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.attack_name", false]], "attack_name (detector_benchmark.generation.articlegenerator attribute)": [[20, "detector_benchmark.generation.ArticleGenerator.attack_name", false]], "attack_name (detector_benchmark.generation.gen_params_attack.genparamsattack attribute)": [[18, "detector_benchmark.generation.gen_params_attack.GenParamsAttack.attack_name", false]], "attack_name (detector_benchmark.generation.genparamsattack attribute)": [[20, "detector_benchmark.generation.GenParamsAttack.attack_name", false]], "attack_name (detector_benchmark.generation.prompt_attack.promptattack attribute)": [[21, "detector_benchmark.generation.prompt_attack.PromptAttack.attack_name", false]], "attack_name (detector_benchmark.generation.prompt_paraphrasing_attack.promptparaphrasingattack attribute)": [[22, "detector_benchmark.generation.prompt_paraphrasing_attack.PromptParaphrasingAttack.attack_name", false]], "attack_name (detector_benchmark.generation.promptattack attribute)": [[20, "detector_benchmark.generation.PromptAttack.attack_name", false]], "attack_name (detector_benchmark.generation.promptparaphrasingattack attribute)": [[20, "detector_benchmark.generation.PromptParaphrasingAttack.attack_name", false]], "attack_type (detector_benchmark.generation.attack_loader.attackloader attribute)": [[16, "detector_benchmark.generation.attack_loader.AttackLoader.attack_type", false]], "attack_type (detector_benchmark.generation.attackloader attribute)": [[20, "detector_benchmark.generation.AttackLoader.attack_type", false]], "attackloader (class in detector_benchmark.generation)": [[20, "detector_benchmark.generation.AttackLoader", false]], "attackloader (class in detector_benchmark.generation.attack_loader)": [[16, "detector_benchmark.generation.attack_loader.AttackLoader", false]], "autowatermark (class in detector_benchmark.watermark.auto_watermark)": [[37, "detector_benchmark.watermark.auto_watermark.AutoWatermark", false]], "basewatermark (class in detector_benchmark.watermark.base)": [[38, "detector_benchmark.watermark.base.BaseWatermark", false]], "batch_size (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline attribute)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.batch_size", false]], "batch_size (detector_benchmark.pipeline.createdatasetpipeline attribute)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.batch_size", false]], "batch_size (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.batch_size", false]], "batch_size (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.batch_size", false]], "batch_size (detector_benchmark.pipeline.text_quality_pipeline.textqualitypipeline attribute)": [[29, "detector_benchmark.pipeline.text_quality_pipeline.TextQualityPipeline.batch_size", false]], "batch_size (detector_benchmark.pipeline.textqualitypipeline attribute)": [[27, "detector_benchmark.pipeline.TextQualityPipeline.batch_size", false]], "bertdetector (class in detector_benchmark.detector)": [[12, "detector_benchmark.detector.BertDetector", false]], "bertdetector (class in detector_benchmark.detector.bert_detector)": [[7, "detector_benchmark.detector.bert_detector.BertDetector", false]], "bertscorescorer (class in detector_benchmark.text_quality_evaluation)": [[34, "detector_benchmark.text_quality_evaluation.BertScoreScorer", false]], "bertscorescorer (class in detector_benchmark.text_quality_evaluation.scorer)": [[35, "detector_benchmark.text_quality_evaluation.scorer.BertScoreScorer", false]], "bootstrap_score() (in module detector_benchmark.text_quality_evaluation.scorer_utils)": [[36, "detector_benchmark.text_quality_evaluation.scorer_utils.bootstrap_score", false]], "calculate_entropy() (detector_benchmark.watermark.sweet.sweet.sweet_utils method)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Utils.calculate_entropy", false]], "cc_history (detector_benchmark.watermark.dip.dip.diputils attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils.cc_history", false]], "cfg (detector_benchmark.detector.detector_loader.detectorloader attribute)": [[9, "detector_benchmark.detector.detector_loader.DetectorLoader.cfg", false]], "cfg (detector_benchmark.detector.detectorloader attribute)": [[12, "detector_benchmark.detector.DetectorLoader.cfg", false]], "cfg (detector_benchmark.generation.attack_loader.attackloader attribute)": [[16, "detector_benchmark.generation.attack_loader.AttackLoader.cfg", false]], "cfg (detector_benchmark.generation.attackloader attribute)": [[20, "detector_benchmark.generation.AttackLoader.cfg", false]], "cfg (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline attribute)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.cfg", false]], "cfg (detector_benchmark.pipeline.createdatasetpipeline attribute)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.cfg", false]], "cfg (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.cfg", false]], "cfg (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.cfg", false]], "chat_template_type (configs.modelconfig attribute)": [[0, "configs.ModelConfig.chat_template_type", false]], "choose_attack() (in module detector_benchmark.create_dataset)": [[2, "detector_benchmark.create_dataset.choose_attack", false]], "choose_dataset() (in module detector_benchmark.create_dataset)": [[2, "detector_benchmark.create_dataset.choose_dataset", false]], "choose_generator() (in module detector_benchmark.create_dataset)": [[2, "detector_benchmark.create_dataset.choose_generator", false]], "choose_watermarking_scheme() (in module detector_benchmark.create_dataset)": [[2, "detector_benchmark.create_dataset.choose_watermarking_scheme", false]], "chunk_length (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.chunk_length", false]], "clean_dataset() (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader method)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.clean_dataset", false]], "clean_dataset() (detector_benchmark.dataset_loader.cnndataloader method)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.clean_dataset", false]], "cnndataloader (class in detector_benchmark.dataset_loader)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader", false]], "cnndataloader (class in detector_benchmark.dataset_loader.cnn_dataset)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader", false]], "compare_human_to_ai (detector_benchmark.text_quality_evaluation.prometheusscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.PrometheusScorer.compare_human_to_ai", false]], "compare_human_to_ai (detector_benchmark.text_quality_evaluation.scorer.prometheusscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PrometheusScorer.compare_human_to_ai", false]], "comparescorer (class in detector_benchmark.text_quality_evaluation.scorer)": [[35, "detector_benchmark.text_quality_evaluation.scorer.CompareScorer", false]], "compute_bootstrap_metrics() (in module detector_benchmark.pipeline.pipeline_utils)": [[28, "detector_benchmark.pipeline.pipeline_utils.compute_bootstrap_metrics", false]], "config (detector_benchmark.watermark.dip.dip attribute)": [[40, "detector_benchmark.watermark.dip.DIP.config", false]], "config (detector_benchmark.watermark.dip.dip.dip attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIP.config", false]], "config (detector_benchmark.watermark.dip.dip.diplogitsprocessor attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPLogitsProcessor.config", false]], "config (detector_benchmark.watermark.dip.dip.diputils attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils.config", false]], "config (detector_benchmark.watermark.exp.exp attribute)": [[42, "detector_benchmark.watermark.exp.EXP.config", false]], "config (detector_benchmark.watermark.exp.exp.exp attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXP.config", false]], "config (detector_benchmark.watermark.exp.exp.exputils attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXPUtils.config", false]], "config (detector_benchmark.watermark.kgw.kgw attribute)": [[44, "detector_benchmark.watermark.kgw.KGW.config", false]], "config (detector_benchmark.watermark.kgw.kgw.kgw attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGW.config", false]], "config (detector_benchmark.watermark.kgw.kgw.kgwlogitsprocessor attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWLogitsProcessor.config", false]], "config (detector_benchmark.watermark.kgw.kgw.kgwutils attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWUtils.config", false]], "config (detector_benchmark.watermark.sir.sir attribute)": [[46, "detector_benchmark.watermark.sir.SIR.config", false]], "config (detector_benchmark.watermark.sir.sir.sir attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIR.config", false]], "config (detector_benchmark.watermark.sir.sir.sirlogitsprocessor attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRLogitsProcessor.config", false]], "config (detector_benchmark.watermark.sir.sir.sirutils attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils.config", false]], "config (detector_benchmark.watermark.sweet.sweet attribute)": [[49, "detector_benchmark.watermark.sweet.SWEET.config", false]], "config (detector_benchmark.watermark.sweet.sweet.sweet attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET.config", false]], "config (detector_benchmark.watermark.sweet.sweet.sweet_logitsprocessor attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_LogitsProcessor.config", false]], "config (detector_benchmark.watermark.sweet.sweet.sweet_utils attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Utils.config", false]], "config_dict (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.config_dict", false]], "config_dict (detector_benchmark.watermark.kgw.kgw.kgwconfig attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig.config_dict", false]], "config_dict (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.config_dict", false]], "config_dict (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.config_dict", false]], "configs": [[0, "module-configs", false]], "corpus (detector_benchmark.text_quality_evaluation.idfscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.IDFScorer.corpus", false]], "corpus (detector_benchmark.text_quality_evaluation.scorer.idfscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.IDFScorer.corpus", false]], "create_dataset() (in module detector_benchmark.create_dataset)": [[2, "detector_benchmark.create_dataset.create_dataset", false]], "create_directory_for_file() (in module utils)": [[55, "utils.create_directory_for_file", false]], "create_experiment_dataset() (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline method)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.create_experiment_dataset", false]], "create_experiment_dataset() (detector_benchmark.pipeline.createdatasetpipeline method)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.create_experiment_dataset", false]], "create_logger() (in module detector_benchmark.pipeline.pipeline_utils)": [[28, "detector_benchmark.pipeline.pipeline_utils.create_logger", false]], "create_logger() (in module utils)": [[55, "utils.create_logger", false]], "create_logger_file() (in module detector_benchmark.pipeline.pipeline_utils)": [[28, "detector_benchmark.pipeline.pipeline_utils.create_logger_file", false]], "create_logger_file() (in module utils)": [[55, "utils.create_logger_file", false]], "create_splits() (in module detector_benchmark.dataset_loader.dataset_loader_utils)": [[4, "detector_benchmark.dataset_loader.dataset_loader_utils.create_splits", false]], "create_train_from_dataset() (in module detector_benchmark.dataset_loader.dataset_loader_utils)": [[4, "detector_benchmark.dataset_loader.dataset_loader_utils.create_train_from_dataset", false]], "createdatasetpipeline (class in detector_benchmark.pipeline)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline", false]], "createdatasetpipeline (class in detector_benchmark.pipeline.create_dataset_pipeline)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline", false]], "crit_to_prob() (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt.probestimatorfastdetectgpt method)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.ProbEstimatorFastDetectGPT.crit_to_prob", false]], "crit_to_prob() (detector_benchmark.detector.fastdetectgpt.probestimatorfastdetectgpt method)": [[12, "detector_benchmark.detector.FastDetectGPT.ProbEstimatorFastDetectGPT.crit_to_prob", false]], "dataset (detector_benchmark.pipeline.text_quality_pipeline.textqualitypipeline attribute)": [[29, "detector_benchmark.pipeline.text_quality_pipeline.TextQualityPipeline.dataset", false]], "dataset (detector_benchmark.pipeline.textqualitypipeline attribute)": [[27, "detector_benchmark.pipeline.TextQualityPipeline.dataset", false]], "dataset_experiment_name (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.dataset_experiment_name", false]], "dataset_experiment_name (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.dataset_experiment_name", false]], "dataset_experiment_path (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.dataset_experiment_path", false]], "dataset_experiment_path (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.dataset_experiment_path", false]], "dataset_loader (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline attribute)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.dataset_loader", false]], "dataset_loader (detector_benchmark.pipeline.createdatasetpipeline attribute)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.dataset_loader", false]], "dataset_name (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader attribute)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.dataset_name", false]], "dataset_name (detector_benchmark.dataset_loader.cnndataloader attribute)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.dataset_name", false]], "dataset_name (detector_benchmark.dataset_loader.fake_true_dataset.faketruepairsdataloader attribute)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader.dataset_name", false]], "dataset_name (detector_benchmark.dataset_loader.faketruepairsdataloader attribute)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader.dataset_name", false]], "dataset_path (detector_benchmark.dataset_loader.fake_true_dataset.faketruepairsdataloader attribute)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader.dataset_path", false]], "dataset_path (detector_benchmark.dataset_loader.faketruepairsdataloader attribute)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader.dataset_path", false]], "dataset_size (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader attribute)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.dataset_size", false]], "dataset_size (detector_benchmark.dataset_loader.cnndataloader attribute)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.dataset_size", false]], "dataset_size (detector_benchmark.dataset_loader.fake_true_dataset.faketruepairsdataloader attribute)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader.dataset_size", false]], "dataset_size (detector_benchmark.dataset_loader.faketruepairsdataloader attribute)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader.dataset_size", false]], "debug_mode (detector_benchmark.detector.gpt_zero_detector.gptzero attribute)": [[11, "detector_benchmark.detector.gpt_zero_detector.GPTZero.debug_mode", false]], "debug_mode (detector_benchmark.detector.gptzero attribute)": [[12, "detector_benchmark.detector.GPTZero.debug_mode", false]], "delta (detector_benchmark.watermark.kgw.kgw.kgwconfig attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig.delta", false]], "delta (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.delta", false]], "delta (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.delta", false]], "detect() (detector_benchmark.detector.bert_detector.bertdetector method)": [[7, "detector_benchmark.detector.bert_detector.BertDetector.detect", false]], "detect() (detector_benchmark.detector.bertdetector method)": [[12, "detector_benchmark.detector.BertDetector.detect", false]], "detect() (detector_benchmark.detector.detector method)": [[12, "detector_benchmark.detector.Detector.detect", false]], "detect() (detector_benchmark.detector.detector.detector method)": [[8, "detector_benchmark.detector.detector.Detector.detect", false]], "detect() (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt method)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.detect", false]], "detect() (detector_benchmark.detector.fastdetectgpt method)": [[12, "detector_benchmark.detector.FastDetectGPT.detect", false]], "detect() (detector_benchmark.detector.gpt_zero_detector.gptzero method)": [[11, "detector_benchmark.detector.gpt_zero_detector.GPTZero.detect", false]], "detect() (detector_benchmark.detector.gptzero method)": [[12, "detector_benchmark.detector.GPTZero.detect", false]], "detect() (detector_benchmark.detector.watermark_detector.watermarkdetector method)": [[13, "detector_benchmark.detector.watermark_detector.WatermarkDetector.detect", false]], "detect() (detector_benchmark.detector.watermarkdetector method)": [[12, "detector_benchmark.detector.WatermarkDetector.detect", false]], "detect_watermark() (detector_benchmark.watermark.base.basewatermark method)": [[38, "detector_benchmark.watermark.base.BaseWatermark.detect_watermark", false]], "detect_watermark() (detector_benchmark.watermark.dip.dip method)": [[40, "detector_benchmark.watermark.dip.DIP.detect_watermark", false]], "detect_watermark() (detector_benchmark.watermark.dip.dip.dip method)": [[39, "detector_benchmark.watermark.dip.dip.DIP.detect_watermark", false]], "detect_watermark() (detector_benchmark.watermark.exp.exp method)": [[42, "detector_benchmark.watermark.exp.EXP.detect_watermark", false]], "detect_watermark() (detector_benchmark.watermark.exp.exp.exp method)": [[41, "detector_benchmark.watermark.exp.exp.EXP.detect_watermark", false]], "detect_watermark() (detector_benchmark.watermark.kgw.kgw method)": [[44, "detector_benchmark.watermark.kgw.KGW.detect_watermark", false]], "detect_watermark() (detector_benchmark.watermark.kgw.kgw.kgw method)": [[45, "detector_benchmark.watermark.kgw.kgw.KGW.detect_watermark", false]], "detect_watermark() (detector_benchmark.watermark.sir.sir method)": [[46, "detector_benchmark.watermark.sir.SIR.detect_watermark", false]], "detect_watermark() (detector_benchmark.watermark.sir.sir.sir method)": [[47, "detector_benchmark.watermark.sir.sir.SIR.detect_watermark", false]], "detect_watermark() (detector_benchmark.watermark.sweet.sweet method)": [[49, "detector_benchmark.watermark.sweet.SWEET.detect_watermark", false]], "detect_watermark() (detector_benchmark.watermark.sweet.sweet.sweet method)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET.detect_watermark", false]], "detection_threshold (detector_benchmark.detector.watermark_detector.watermarkdetector attribute)": [[13, "detector_benchmark.detector.watermark_detector.WatermarkDetector.detection_threshold", false]], "detection_threshold (detector_benchmark.detector.watermarkdetector attribute)": [[12, "detector_benchmark.detector.WatermarkDetector.detection_threshold", false]], "detector (class in detector_benchmark.detector)": [[12, "detector_benchmark.detector.Detector", false]], "detector (class in detector_benchmark.detector.detector)": [[8, "detector_benchmark.detector.detector.Detector", false]], "detector (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.detector", false]], "detector (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.detector", false]], "detector_benchmark": [[23, "module-detector_benchmark", false]], "detector_benchmark.conf": [[1, "module-detector_benchmark.conf", false]], "detector_benchmark.create_dataset": [[2, "module-detector_benchmark.create_dataset", false]], "detector_benchmark.dataset_loader": [[6, "module-detector_benchmark.dataset_loader", false]], "detector_benchmark.dataset_loader.cnn_dataset": [[3, "module-detector_benchmark.dataset_loader.cnn_dataset", false]], "detector_benchmark.dataset_loader.dataset_loader_utils": [[4, "module-detector_benchmark.dataset_loader.dataset_loader_utils", false]], "detector_benchmark.dataset_loader.fake_true_dataset": [[5, "module-detector_benchmark.dataset_loader.fake_true_dataset", false]], "detector_benchmark.detector": [[12, "module-detector_benchmark.detector", false]], "detector_benchmark.detector.bert_detector": [[7, "module-detector_benchmark.detector.bert_detector", false]], "detector_benchmark.detector.detector": [[8, "module-detector_benchmark.detector.detector", false]], "detector_benchmark.detector.detector_loader": [[9, "module-detector_benchmark.detector.detector_loader", false]], "detector_benchmark.detector.fast_detect_gpt": [[10, "module-detector_benchmark.detector.fast_detect_gpt", false]], "detector_benchmark.detector.gpt_zero_detector": [[11, "module-detector_benchmark.detector.gpt_zero_detector", false]], "detector_benchmark.detector.watermark_detector": [[13, "module-detector_benchmark.detector.watermark_detector", false]], "detector_benchmark.generate_mappings": [[14, "module-detector_benchmark.generate_mappings", false]], "detector_benchmark.generation": [[20, "module-detector_benchmark.generation", false]], "detector_benchmark.generation.article_generator": [[15, "module-detector_benchmark.generation.article_generator", false]], "detector_benchmark.generation.attack_loader": [[16, "module-detector_benchmark.generation.attack_loader", false]], "detector_benchmark.generation.gen_loader": [[17, "module-detector_benchmark.generation.gen_loader", false]], "detector_benchmark.generation.gen_params_attack": [[18, "module-detector_benchmark.generation.gen_params_attack", false]], "detector_benchmark.generation.generator": [[19, "module-detector_benchmark.generation.generator", false]], "detector_benchmark.generation.prompt_attack": [[21, "module-detector_benchmark.generation.prompt_attack", false]], "detector_benchmark.generation.prompt_paraphrasing_attack": [[22, "module-detector_benchmark.generation.prompt_paraphrasing_attack", false]], "detector_benchmark.pipeline": [[27, "module-detector_benchmark.pipeline", false]], "detector_benchmark.pipeline.create_dataset_pipeline": [[24, "module-detector_benchmark.pipeline.create_dataset_pipeline", false]], "detector_benchmark.pipeline.experiment_pipeline": [[25, "module-detector_benchmark.pipeline.experiment_pipeline", false]], "detector_benchmark.pipeline.experiment_test_detector_pipeline": [[26, "module-detector_benchmark.pipeline.experiment_test_detector_pipeline", false]], "detector_benchmark.pipeline.pipeline_utils": [[28, "module-detector_benchmark.pipeline.pipeline_utils", false]], "detector_benchmark.pipeline.text_quality_pipeline": [[29, "module-detector_benchmark.pipeline.text_quality_pipeline", false]], "detector_benchmark.run_human_eval": [[30, "module-detector_benchmark.run_human_eval", false]], "detector_benchmark.run_human_eval_plus": [[31, "module-detector_benchmark.run_human_eval_plus", false]], "detector_benchmark.test_detector": [[32, "module-detector_benchmark.test_detector", false]], "detector_benchmark.test_text_quality": [[33, "module-detector_benchmark.test_text_quality", false]], "detector_benchmark.text_quality_evaluation": [[34, "module-detector_benchmark.text_quality_evaluation", false]], "detector_benchmark.text_quality_evaluation.scorer": [[35, "module-detector_benchmark.text_quality_evaluation.scorer", false]], "detector_benchmark.text_quality_evaluation.scorer_utils": [[36, "module-detector_benchmark.text_quality_evaluation.scorer_utils", false]], "detector_benchmark.watermark": [[43, "module-detector_benchmark.watermark", false]], "detector_benchmark.watermark.auto_watermark": [[37, "module-detector_benchmark.watermark.auto_watermark", false]], "detector_benchmark.watermark.base": [[38, "module-detector_benchmark.watermark.base", false]], "detector_benchmark.watermark.dip": [[40, "module-detector_benchmark.watermark.dip", false]], "detector_benchmark.watermark.dip.dip": [[39, "module-detector_benchmark.watermark.dip.dip", false]], "detector_benchmark.watermark.exp": [[42, "module-detector_benchmark.watermark.exp", false]], "detector_benchmark.watermark.exp.exp": [[41, "module-detector_benchmark.watermark.exp.exp", false]], "detector_benchmark.watermark.kgw": [[44, "module-detector_benchmark.watermark.kgw", false]], "detector_benchmark.watermark.kgw.kgw": [[45, "module-detector_benchmark.watermark.kgw.kgw", false]], "detector_benchmark.watermark.sir": [[46, "module-detector_benchmark.watermark.sir", false]], "detector_benchmark.watermark.sir.sir": [[47, "module-detector_benchmark.watermark.sir.sir", false]], "detector_benchmark.watermark.sir.transform_model": [[48, "module-detector_benchmark.watermark.sir.transform_model", false]], "detector_benchmark.watermark.sweet": [[49, "module-detector_benchmark.watermark.sweet", false]], "detector_benchmark.watermark.sweet.sweet": [[50, "module-detector_benchmark.watermark.sweet.sweet", false]], "detector_name (detector_benchmark.detector.detector_loader.detectorloader attribute)": [[9, "detector_benchmark.detector.detector_loader.DetectorLoader.detector_name", false]], "detector_name (detector_benchmark.detector.detectorloader attribute)": [[12, "detector_benchmark.detector.DetectorLoader.detector_name", false]], "detector_name (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.detector_name", false]], "detector_name (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.detector_name", false]], "detectorloader (class in detector_benchmark.detector)": [[12, "detector_benchmark.detector.DetectorLoader", false]], "detectorloader (class in detector_benchmark.detector.detector_loader)": [[9, "detector_benchmark.detector.detector_loader.DetectorLoader", false]], "device (configs.modelconfig attribute)": [[0, "configs.ModelConfig.device", false]], "device (detector_benchmark.detector.bert_detector.bertdetector attribute)": [[7, "detector_benchmark.detector.bert_detector.BertDetector.device", false]], "device (detector_benchmark.detector.bertdetector attribute)": [[12, "detector_benchmark.detector.BertDetector.device", false]], "device (detector_benchmark.detector.detector_loader.detectorloader attribute)": [[9, "detector_benchmark.detector.detector_loader.DetectorLoader.device", false]], "device (detector_benchmark.detector.detectorloader attribute)": [[12, "detector_benchmark.detector.DetectorLoader.device", false]], "device (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt attribute)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.device", false]], "device (detector_benchmark.detector.fastdetectgpt attribute)": [[12, "detector_benchmark.detector.FastDetectGPT.device", false]], "device (detector_benchmark.generation.gen_loader.genloader attribute)": [[17, "detector_benchmark.generation.gen_loader.GenLoader.device", false]], "device (detector_benchmark.generation.generator.llmgenerator attribute)": [[19, "detector_benchmark.generation.generator.LLMGenerator.device", false]], "device (detector_benchmark.generation.genloader attribute)": [[20, "detector_benchmark.generation.GenLoader.device", false]], "device (detector_benchmark.generation.llmgenerator attribute)": [[20, "detector_benchmark.generation.LLMGenerator.device", false]], "device (detector_benchmark.text_quality_evaluation.pplscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.PPLScorer.device", false]], "device (detector_benchmark.text_quality_evaluation.scorer.pplscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PPLScorer.device", false]], "device (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.device", false]], "device (detector_benchmark.watermark.exp.exp.expconfig attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXPConfig.device", false]], "device (detector_benchmark.watermark.kgw.kgw.kgwconfig attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig.device", false]], "device (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.device", false]], "device (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.device", false]], "device (transformers_config.transformersconfig attribute)": [[54, "transformers_config.TransformersConfig.device", false]], "dip (class in detector_benchmark.watermark.dip)": [[40, "detector_benchmark.watermark.dip.DIP", false]], "dip (class in detector_benchmark.watermark.dip.dip)": [[39, "detector_benchmark.watermark.dip.dip.DIP", false]], "dipconfig (class in detector_benchmark.watermark.dip.dip)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig", false]], "diplogitsprocessor (class in detector_benchmark.watermark.dip.dip)": [[39, "detector_benchmark.watermark.dip.dip.DIPLogitsProcessor", false]], "diputils (class in detector_benchmark.watermark.dip.dip)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils", false]], "embedding_model (detector_benchmark.watermark.sir.sir.sirutils attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils.embedding_model", false]], "embedding_model_path (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.embedding_model_path", false]], "embedding_tokenizer (detector_benchmark.watermark.sir.sir.sirutils attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils.embedding_tokenizer", false]], "entropy_threshold (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.entropy_threshold", false]], "eval_fraction (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader attribute)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.eval_fraction", false]], "eval_fraction (detector_benchmark.dataset_loader.cnndataloader attribute)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.eval_fraction", false]], "eval_human (detector_benchmark.pipeline.text_quality_pipeline.textqualitypipeline attribute)": [[29, "detector_benchmark.pipeline.text_quality_pipeline.TextQualityPipeline.eval_human", false]], "eval_human (detector_benchmark.pipeline.textqualitypipeline attribute)": [[27, "detector_benchmark.pipeline.TextQualityPipeline.eval_human", false]], "evaluate_detector() (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline method)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.evaluate_detector", false]], "evaluate_detector() (detector_benchmark.pipeline.experimenttestdetectorpipeline method)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.evaluate_detector", false]], "evaluate_text_quality() (in module detector_benchmark.test_text_quality)": [[33, "detector_benchmark.test_text_quality.evaluate_text_quality", false]], "exp (class in detector_benchmark.watermark.exp)": [[42, "detector_benchmark.watermark.exp.EXP", false]], "exp (class in detector_benchmark.watermark.exp.exp)": [[41, "detector_benchmark.watermark.exp.exp.EXP", false]], "exp_sampling() (detector_benchmark.watermark.exp.exp.exputils method)": [[41, "detector_benchmark.watermark.exp.exp.EXPUtils.exp_sampling", false]], "expconfig (class in detector_benchmark.watermark.exp.exp)": [[41, "detector_benchmark.watermark.exp.exp.EXPConfig", false]], "experiment_name (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline attribute)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.experiment_name", false]], "experiment_name (detector_benchmark.pipeline.createdatasetpipeline attribute)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.experiment_name", false]], "experiment_name (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.experiment_name", false]], "experiment_name (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.experiment_name", false]], "experiment_path (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline attribute)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.experiment_path", false]], "experiment_path (detector_benchmark.pipeline.createdatasetpipeline attribute)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.experiment_path", false]], "experiment_path (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.experiment_path", false]], "experiment_path (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.experiment_path", false]], "experimentpipeline (class in detector_benchmark.pipeline.experiment_pipeline)": [[25, "detector_benchmark.pipeline.experiment_pipeline.ExperimentPipeline", false]], "experimenttestdetectorpipeline (class in detector_benchmark.pipeline)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline", false]], "experimenttestdetectorpipeline (class in detector_benchmark.pipeline.experiment_test_detector_pipeline)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline", false]], "exputils (class in detector_benchmark.watermark.exp.exp)": [[41, "detector_benchmark.watermark.exp.exp.EXPUtils", false]], "fake_crits (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt.probestimatorfastdetectgpt attribute)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.ProbEstimatorFastDetectGPT.fake_crits", false]], "fake_crits (detector_benchmark.detector.fastdetectgpt.probestimatorfastdetectgpt attribute)": [[12, "detector_benchmark.detector.FastDetectGPT.ProbEstimatorFastDetectGPT.fake_crits", false]], "faketruepairsdataloader (class in detector_benchmark.dataset_loader)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader", false]], "faketruepairsdataloader (class in detector_benchmark.dataset_loader.fake_true_dataset)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader", false]], "fastdetectgpt (class in detector_benchmark.detector)": [[12, "detector_benchmark.detector.FastDetectGPT", false]], "fastdetectgpt (class in detector_benchmark.detector.fast_detect_gpt)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT", false]], "fastdetectgpt.probestimatorfastdetectgpt (class in detector_benchmark.detector)": [[12, "detector_benchmark.detector.FastDetectGPT.ProbEstimatorFastDetectGPT", false]], "fastdetectgpt.probestimatorfastdetectgpt (class in detector_benchmark.detector.fast_detect_gpt)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.ProbEstimatorFastDetectGPT", false]], "fc (detector_benchmark.watermark.sir.transform_model.residualblock attribute)": [[48, "detector_benchmark.watermark.sir.transform_model.ResidualBlock.fc", false]], "feature_names (detector_benchmark.text_quality_evaluation.idfscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.IDFScorer.feature_names", false]], "feature_names (detector_benchmark.text_quality_evaluation.scorer.idfscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.IDFScorer.feature_names", false]], "filter_duplicates() (in module detector_benchmark.dataset_loader.dataset_loader_utils)": [[4, "detector_benchmark.dataset_loader.dataset_loader_utils.filter_duplicates", false]], "filtered_corpus (detector_benchmark.text_quality_evaluation.idfscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.IDFScorer.filtered_corpus", false]], "filtered_corpus (detector_benchmark.text_quality_evaluation.scorer.idfscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.IDFScorer.filtered_corpus", false]], "find_threshold() (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline method)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.find_threshold", false]], "find_threshold() (detector_benchmark.pipeline.experimenttestdetectorpipeline method)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.find_threshold", false]], "forward() (detector_benchmark.generation.generator.llmgenerator method)": [[19, "detector_benchmark.generation.generator.LLMGenerator.forward", false]], "forward() (detector_benchmark.generation.llmgenerator method)": [[20, "detector_benchmark.generation.LLMGenerator.forward", false]], "forward() (detector_benchmark.watermark.sir.transform_model.residualblock method)": [[48, "detector_benchmark.watermark.sir.transform_model.ResidualBlock.forward", false]], "forward() (detector_benchmark.watermark.sir.transform_model.transformmodel method)": [[48, "detector_benchmark.watermark.sir.transform_model.TransformModel.forward", false]], "forward_debug() (detector_benchmark.generation.generator.llmgenerator method)": [[19, "detector_benchmark.generation.generator.LLMGenerator.forward_debug", false]], "forward_debug() (detector_benchmark.generation.llmgenerator method)": [[20, "detector_benchmark.generation.LLMGenerator.forward_debug", false]], "from_random() (detector_benchmark.watermark.dip.dip.diputils method)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils.from_random", false]], "gamma (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.gamma", false]], "gamma (detector_benchmark.watermark.kgw.kgw.kgwconfig attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig.gamma", false]], "gamma (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.gamma", false]], "gen_kwargs (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.gen_kwargs", false]], "gen_kwargs (detector_benchmark.watermark.exp.exp.expconfig attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXPConfig.gen_kwargs", false]], "gen_kwargs (detector_benchmark.watermark.kgw.kgw.kgwconfig attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig.gen_kwargs", false]], "gen_kwargs (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.gen_kwargs", false]], "gen_kwargs (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.gen_kwargs", false]], "gen_kwargs (transformers_config.transformersconfig attribute)": [[54, "transformers_config.TransformersConfig.gen_kwargs", false]], "gen_model (detector_benchmark.generation.article_generator.articlegenerator attribute)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.gen_model", false]], "gen_model (detector_benchmark.generation.articlegenerator attribute)": [[20, "detector_benchmark.generation.ArticleGenerator.gen_model", false]], "gen_model (detector_benchmark.generation.attack_loader.attackloader attribute)": [[16, "detector_benchmark.generation.attack_loader.AttackLoader.gen_model", false]], "gen_model (detector_benchmark.generation.attackloader attribute)": [[20, "detector_benchmark.generation.AttackLoader.gen_model", false]], "gen_model_config (detector_benchmark.generation.article_generator.articlegenerator attribute)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.gen_model_config", false]], "gen_model_config (detector_benchmark.generation.articlegenerator attribute)": [[20, "detector_benchmark.generation.ArticleGenerator.gen_model_config", false]], "gen_name (detector_benchmark.generation.article_generator.articlegenerator attribute)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.gen_name", false]], "gen_name (detector_benchmark.generation.articlegenerator attribute)": [[20, "detector_benchmark.generation.ArticleGenerator.gen_name", false]], "gen_params (configs.modelconfig attribute)": [[0, "configs.ModelConfig.gen_params", false]], "gen_params (detector_benchmark.generation.gen_loader.genloader attribute)": [[17, "detector_benchmark.generation.gen_loader.GenLoader.gen_params", false]], "gen_params (detector_benchmark.generation.generator.llmgenerator attribute)": [[19, "detector_benchmark.generation.generator.LLMGenerator.gen_params", false]], "gen_params (detector_benchmark.generation.genloader attribute)": [[20, "detector_benchmark.generation.GenLoader.gen_params", false]], "gen_params (detector_benchmark.generation.llmgenerator attribute)": [[20, "detector_benchmark.generation.LLMGenerator.gen_params", false]], "gen_prompt_config (detector_benchmark.generation.article_generator.articlegenerator attribute)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.gen_prompt_config", false]], "gen_prompt_config (detector_benchmark.generation.articlegenerator attribute)": [[20, "detector_benchmark.generation.ArticleGenerator.gen_prompt_config", false]], "gen_tokenizer_only (detector_benchmark.generation.gen_loader.genloader attribute)": [[17, "detector_benchmark.generation.gen_loader.GenLoader.gen_tokenizer_only", false]], "gen_tokenizer_only (detector_benchmark.generation.genloader attribute)": [[20, "detector_benchmark.generation.GenLoader.gen_tokenizer_only", false]], "gen_utils": [[51, "module-gen_utils", false]], "generate() (detector_benchmark.watermark.dip.dip method)": [[40, "detector_benchmark.watermark.dip.DIP.generate", false]], "generate() (detector_benchmark.watermark.dip.dip.dip method)": [[39, "detector_benchmark.watermark.dip.dip.DIP.generate", false]], "generate() (detector_benchmark.watermark.exp.exp method)": [[42, "detector_benchmark.watermark.exp.EXP.generate", false]], "generate() (detector_benchmark.watermark.exp.exp.exp method)": [[41, "detector_benchmark.watermark.exp.exp.EXP.generate", false]], "generate() (detector_benchmark.watermark.kgw.kgw method)": [[44, "detector_benchmark.watermark.kgw.KGW.generate", false]], "generate() (detector_benchmark.watermark.kgw.kgw.kgw method)": [[45, "detector_benchmark.watermark.kgw.kgw.KGW.generate", false]], "generate() (detector_benchmark.watermark.sir.sir method)": [[46, "detector_benchmark.watermark.sir.SIR.generate", false]], "generate() (detector_benchmark.watermark.sir.sir.sir method)": [[47, "detector_benchmark.watermark.sir.sir.SIR.generate", false]], "generate() (detector_benchmark.watermark.sweet.sweet method)": [[49, "detector_benchmark.watermark.sweet.SWEET.generate", false]], "generate() (detector_benchmark.watermark.sweet.sweet.sweet method)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET.generate", false]], "generate_adversarial_text() (detector_benchmark.generation.article_generator.articlegenerator method)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.generate_adversarial_text", false]], "generate_adversarial_text() (detector_benchmark.generation.articlegenerator method)": [[20, "detector_benchmark.generation.ArticleGenerator.generate_adversarial_text", false]], "generate_adversarial_text() (detector_benchmark.generation.gen_params_attack.genparamsattack method)": [[18, "detector_benchmark.generation.gen_params_attack.GenParamsAttack.generate_adversarial_text", false]], "generate_adversarial_text() (detector_benchmark.generation.genparamsattack method)": [[20, "detector_benchmark.generation.GenParamsAttack.generate_adversarial_text", false]], "generate_adversarial_text() (detector_benchmark.generation.prompt_attack.promptattack method)": [[21, "detector_benchmark.generation.prompt_attack.PromptAttack.generate_adversarial_text", false]], "generate_adversarial_text() (detector_benchmark.generation.prompt_paraphrasing_attack.promptparaphrasingattack method)": [[22, "detector_benchmark.generation.prompt_paraphrasing_attack.PromptParaphrasingAttack.generate_adversarial_text", false]], "generate_adversarial_text() (detector_benchmark.generation.promptattack method)": [[20, "detector_benchmark.generation.PromptAttack.generate_adversarial_text", false]], "generate_adversarial_text() (detector_benchmark.generation.promptparaphrasingattack method)": [[20, "detector_benchmark.generation.PromptParaphrasingAttack.generate_adversarial_text", false]], "generate_batch_completions() (in module detector_benchmark.run_human_eval)": [[30, "detector_benchmark.run_human_eval.generate_batch_completions", false]], "generate_batch_completions() (in module detector_benchmark.run_human_eval_plus)": [[31, "detector_benchmark.run_human_eval_plus.generate_batch_completions", false]], "generate_mapping() (in module detector_benchmark.generate_mappings)": [[14, "detector_benchmark.generate_mappings.generate_mapping", false]], "generate_one_completion() (in module detector_benchmark.run_human_eval)": [[30, "detector_benchmark.run_human_eval.generate_one_completion", false]], "generate_one_completion() (in module detector_benchmark.run_human_eval_plus)": [[31, "detector_benchmark.run_human_eval_plus.generate_one_completion", false]], "generate_text() (detector_benchmark.generation.article_generator.articlegenerator method)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.generate_text", false]], "generate_text() (detector_benchmark.generation.articlegenerator method)": [[20, "detector_benchmark.generation.ArticleGenerator.generate_text", false]], "generate_unwatermarked_text() (detector_benchmark.watermark.base.basewatermark method)": [[38, "detector_benchmark.watermark.base.BaseWatermark.generate_unwatermarked_text", false]], "generate_watermarked_text() (detector_benchmark.watermark.base.basewatermark method)": [[38, "detector_benchmark.watermark.base.BaseWatermark.generate_watermarked_text", false]], "generate_watermarked_text() (detector_benchmark.watermark.dip.dip method)": [[40, "detector_benchmark.watermark.dip.DIP.generate_watermarked_text", false]], "generate_watermarked_text() (detector_benchmark.watermark.dip.dip.dip method)": [[39, "detector_benchmark.watermark.dip.dip.DIP.generate_watermarked_text", false]], "generate_watermarked_text() (detector_benchmark.watermark.exp.exp method)": [[42, "detector_benchmark.watermark.exp.EXP.generate_watermarked_text", false]], "generate_watermarked_text() (detector_benchmark.watermark.exp.exp.exp method)": [[41, "detector_benchmark.watermark.exp.exp.EXP.generate_watermarked_text", false]], "generate_watermarked_text() (detector_benchmark.watermark.kgw.kgw method)": [[44, "detector_benchmark.watermark.kgw.KGW.generate_watermarked_text", false]], "generate_watermarked_text() (detector_benchmark.watermark.kgw.kgw.kgw method)": [[45, "detector_benchmark.watermark.kgw.kgw.KGW.generate_watermarked_text", false]], "generate_watermarked_text() (detector_benchmark.watermark.sir.sir method)": [[46, "detector_benchmark.watermark.sir.SIR.generate_watermarked_text", false]], "generate_watermarked_text() (detector_benchmark.watermark.sir.sir.sir method)": [[47, "detector_benchmark.watermark.sir.sir.SIR.generate_watermarked_text", false]], "generate_watermarked_text() (detector_benchmark.watermark.sweet.sweet method)": [[49, "detector_benchmark.watermark.sweet.SWEET.generate_watermarked_text", false]], "generate_watermarked_text() (detector_benchmark.watermark.sweet.sweet.sweet method)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET.generate_watermarked_text", false]], "generation_model (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.generation_model", false]], "generation_model (detector_benchmark.watermark.exp.exp.expconfig attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXPConfig.generation_model", false]], "generation_model (detector_benchmark.watermark.kgw.kgw.kgwconfig attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig.generation_model", false]], "generation_model (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.generation_model", false]], "generation_model (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.generation_model", false]], "generation_tokenizer (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.generation_tokenizer", false]], "generation_tokenizer (detector_benchmark.watermark.exp.exp.expconfig attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXPConfig.generation_tokenizer", false]], "generation_tokenizer (detector_benchmark.watermark.kgw.kgw.kgwconfig attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig.generation_tokenizer", false]], "generation_tokenizer (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.generation_tokenizer", false]], "generation_tokenizer (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.generation_tokenizer", false]], "generator (detector_benchmark.generation.generator.llmgenerator attribute)": [[19, "detector_benchmark.generation.generator.LLMGenerator.generator", false]], "generator (detector_benchmark.generation.llmgenerator attribute)": [[20, "detector_benchmark.generation.LLMGenerator.generator", false]], "generator_name (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline attribute)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.generator_name", false]], "generator_name (detector_benchmark.pipeline.createdatasetpipeline attribute)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.generator_name", false]], "genloader (class in detector_benchmark.generation)": [[20, "detector_benchmark.generation.GenLoader", false]], "genloader (class in detector_benchmark.generation.gen_loader)": [[17, "detector_benchmark.generation.gen_loader.GenLoader", false]], "genparamsattack (class in detector_benchmark.generation)": [[20, "detector_benchmark.generation.GenParamsAttack", false]], "genparamsattack (class in detector_benchmark.generation.gen_params_attack)": [[18, "detector_benchmark.generation.gen_params_attack.GenParamsAttack", false]], "get_bias() (detector_benchmark.watermark.sir.sir.sirutils method)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils.get_bias", false]], "get_embedding() (detector_benchmark.watermark.sir.sir.sirutils method)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils.get_embedding", false]], "get_greenlist_ids() (detector_benchmark.watermark.kgw.kgw.kgwutils method)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWUtils.get_greenlist_ids", false]], "get_greenlist_ids() (detector_benchmark.watermark.sweet.sweet.sweet_utils method)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Utils.get_greenlist_ids", false]], "get_likelihood() (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt method)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.get_likelihood", false]], "get_likelihood() (detector_benchmark.detector.fastdetectgpt method)": [[12, "detector_benchmark.detector.FastDetectGPT.get_likelihood", false]], "get_result() (openai_utils.openaiapi method)": [[53, "openai_utils.OpenAIAPI.get_result", false]], "get_result_from_gpt3_5() (openai_utils.openaiapi method)": [[53, "openai_utils.OpenAIAPI.get_result_from_gpt3_5", false]], "get_result_from_gpt4() (openai_utils.openaiapi method)": [[53, "openai_utils.OpenAIAPI.get_result_from_gpt4", false]], "get_samples() (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt method)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.get_samples", false]], "get_samples() (detector_benchmark.detector.fastdetectgpt method)": [[12, "detector_benchmark.detector.FastDetectGPT.get_samples", false]], "get_sampling_discrepancy() (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt method)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.get_sampling_discrepancy", false]], "get_sampling_discrepancy() (detector_benchmark.detector.fastdetectgpt method)": [[12, "detector_benchmark.detector.FastDetectGPT.get_sampling_discrepancy", false]], "get_sampling_discrepancy_analytic() (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt method)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.get_sampling_discrepancy_analytic", false]], "get_sampling_discrepancy_analytic() (detector_benchmark.detector.fastdetectgpt method)": [[12, "detector_benchmark.detector.FastDetectGPT.get_sampling_discrepancy_analytic", false]], "get_seed_for_cipher() (detector_benchmark.watermark.dip.dip.diputils method)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils.get_seed_for_cipher", false]], "get_text_split() (detector_benchmark.watermark.sir.sir.sirutils method)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils.get_text_split", false]], "get_threshold_for_results() (in module detector_benchmark.pipeline.pipeline_utils)": [[28, "detector_benchmark.pipeline.pipeline_utils.get_threshold_for_results", false]], "gptzero (class in detector_benchmark.detector)": [[12, "detector_benchmark.detector.GPTZero", false]], "gptzero (class in detector_benchmark.detector.gpt_zero_detector)": [[11, "detector_benchmark.detector.gpt_zero_detector.GPTZero", false]], "hash_key (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.hash_key", false]], "hash_key (detector_benchmark.watermark.exp.exp.expconfig attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXPConfig.hash_key", false]], "hash_key (detector_benchmark.watermark.kgw.kgw.kgwconfig attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig.hash_key", false]], "hash_key (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.hash_key", false]], "hf_dataset_path (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader attribute)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.hf_dataset_path", false]], "hf_dataset_path (detector_benchmark.dataset_loader.cnndataloader attribute)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.hf_dataset_path", false]], "idf_values (detector_benchmark.text_quality_evaluation.idfscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.IDFScorer.idf_values", false]], "idf_values (detector_benchmark.text_quality_evaluation.scorer.idfscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.IDFScorer.idf_values", false]], "idfscorer (class in detector_benchmark.text_quality_evaluation)": [[34, "detector_benchmark.text_quality_evaluation.IDFScorer", false]], "idfscorer (class in detector_benchmark.text_quality_evaluation.scorer)": [[35, "detector_benchmark.text_quality_evaluation.scorer.IDFScorer", false]], "ignore_history (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.ignore_history", false]], "init_pipelines() (in module detector_benchmark.test_text_quality)": [[33, "detector_benchmark.test_text_quality.init_pipelines", false]], "judge (detector_benchmark.text_quality_evaluation.prometheusscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.PrometheusScorer.judge", false]], "judge (detector_benchmark.text_quality_evaluation.scorer.prometheusscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PrometheusScorer.judge", false]], "kgw (class in detector_benchmark.watermark.kgw)": [[44, "detector_benchmark.watermark.kgw.KGW", false]], "kgw (class in detector_benchmark.watermark.kgw.kgw)": [[45, "detector_benchmark.watermark.kgw.kgw.KGW", false]], "kgwconfig (class in detector_benchmark.watermark.kgw.kgw)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig", false]], "kgwlogitsprocessor (class in detector_benchmark.watermark.kgw.kgw)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWLogitsProcessor", false]], "kgwutils (class in detector_benchmark.watermark.kgw.kgw)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWUtils", false]], "layers (detector_benchmark.watermark.sir.transform_model.transformmodel attribute)": [[48, "detector_benchmark.watermark.sir.transform_model.TransformModel.layers", false]], "llmgenerator (class in detector_benchmark.generation)": [[20, "detector_benchmark.generation.LLMGenerator", false]], "llmgenerator (class in detector_benchmark.generation.generator)": [[19, "detector_benchmark.generation.generator.LLMGenerator", false]], "load() (detector_benchmark.detector.detector_loader.detectorloader method)": [[9, "detector_benchmark.detector.detector_loader.DetectorLoader.load", false]], "load() (detector_benchmark.detector.detectorloader method)": [[12, "detector_benchmark.detector.DetectorLoader.load", false]], "load() (detector_benchmark.generation.attack_loader.attackloader method)": [[16, "detector_benchmark.generation.attack_loader.AttackLoader.load", false]], "load() (detector_benchmark.generation.attackloader method)": [[20, "detector_benchmark.generation.AttackLoader.load", false]], "load() (detector_benchmark.generation.gen_loader.genloader method)": [[17, "detector_benchmark.generation.gen_loader.GenLoader.load", false]], "load() (detector_benchmark.generation.genloader method)": [[20, "detector_benchmark.generation.GenLoader.load", false]], "load() (detector_benchmark.watermark.auto_watermark.autowatermark method)": [[37, "detector_benchmark.watermark.auto_watermark.AutoWatermark.load", false]], "load_config_file() (in module utils)": [[55, "utils.load_config_file", false]], "load_data() (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader method)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.load_data", false]], "load_data() (detector_benchmark.dataset_loader.cnndataloader method)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.load_data", false]], "load_data() (detector_benchmark.dataset_loader.fake_true_dataset.faketruepairsdataloader method)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader.load_data", false]], "load_data() (detector_benchmark.dataset_loader.faketruepairsdataloader method)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader.load_data", false]], "load_json_as_list() (in module utils)": [[55, "utils.load_json_as_list", false]], "load_local (detector_benchmark.dataset_loader.fake_true_dataset.faketruepairsdataloader attribute)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader.load_local", false]], "load_local (detector_benchmark.dataset_loader.faketruepairsdataloader attribute)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader.load_local", false]], "local_weights (detector_benchmark.detector.detector_loader.detectorloader attribute)": [[9, "detector_benchmark.detector.detector_loader.DetectorLoader.local_weights", false]], "local_weights (detector_benchmark.detector.detectorloader attribute)": [[12, "detector_benchmark.detector.DetectorLoader.local_weights", false]], "log (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline attribute)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.log", false]], "log (detector_benchmark.pipeline.createdatasetpipeline attribute)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.log", false]], "log (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.log", false]], "log (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.log", false]], "log_path (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline attribute)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.log_path", false]], "log_path (detector_benchmark.pipeline.createdatasetpipeline attribute)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.log_path", false]], "log_path (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.log_path", false]], "log_path (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.log_path", false]], "logits_processor (detector_benchmark.watermark.dip.dip attribute)": [[40, "detector_benchmark.watermark.dip.DIP.logits_processor", false]], "logits_processor (detector_benchmark.watermark.dip.dip.dip attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIP.logits_processor", false]], "logits_processor (detector_benchmark.watermark.kgw.kgw attribute)": [[44, "detector_benchmark.watermark.kgw.KGW.logits_processor", false]], "logits_processor (detector_benchmark.watermark.kgw.kgw.kgw attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGW.logits_processor", false]], "logits_processor (detector_benchmark.watermark.sir.sir attribute)": [[46, "detector_benchmark.watermark.sir.SIR.logits_processor", false]], "logits_processor (detector_benchmark.watermark.sir.sir.sir attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIR.logits_processor", false]], "logits_processor (detector_benchmark.watermark.sweet.sweet attribute)": [[49, "detector_benchmark.watermark.sweet.SWEET.logits_processor", false]], "logits_processor (detector_benchmark.watermark.sweet.sweet.sweet attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET.logits_processor", false]], "main() (in module detector_benchmark.create_dataset)": [[2, "detector_benchmark.create_dataset.main", false]], "main() (in module detector_benchmark.generate_mappings)": [[14, "detector_benchmark.generate_mappings.main", false]], "main() (in module detector_benchmark.test_detector)": [[32, "detector_benchmark.test_detector.main", false]], "main() (in module detector_benchmark.test_text_quality)": [[33, "detector_benchmark.test_text_quality.main", false]], "mapping (detector_benchmark.watermark.sir.sir.sirutils attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils.mapping", false]], "mapping_name (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.mapping_name", false]], "max_sample_len (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader attribute)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.max_sample_len", false]], "max_sample_len (detector_benchmark.dataset_loader.cnndataloader attribute)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.max_sample_len", false]], "max_sample_len (detector_benchmark.dataset_loader.fake_true_dataset.faketruepairsdataloader attribute)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader.max_sample_len", false]], "max_sample_len (detector_benchmark.dataset_loader.faketruepairsdataloader attribute)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader.max_sample_len", false]], "max_sample_len (detector_benchmark.generation.article_generator.articlegenerator attribute)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.max_sample_len", false]], "max_sample_len (detector_benchmark.generation.articlegenerator attribute)": [[20, "detector_benchmark.generation.ArticleGenerator.max_sample_len", false]], "max_sample_len (detector_benchmark.generation.attack_loader.attackloader attribute)": [[16, "detector_benchmark.generation.attack_loader.AttackLoader.max_sample_len", false]], "max_sample_len (detector_benchmark.generation.attackloader attribute)": [[20, "detector_benchmark.generation.AttackLoader.max_sample_len", false]], "mean_pooling() (detector_benchmark.text_quality_evaluation.scorer.semscorescorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.SemScoreScorer.mean_pooling", false]], "mean_pooling() (detector_benchmark.text_quality_evaluation.semscorescorer method)": [[34, "detector_benchmark.text_quality_evaluation.SemScoreScorer.mean_pooling", false]], "metric (detector_benchmark.text_quality_evaluation.pplscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.PPLScorer.metric", false]], "metric (detector_benchmark.text_quality_evaluation.scorer.pplscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PPLScorer.metric", false]], "model (detector_benchmark.detector.bert_detector.bertdetector attribute)": [[7, "detector_benchmark.detector.bert_detector.BertDetector.model", false]], "model (detector_benchmark.detector.bertdetector attribute)": [[12, "detector_benchmark.detector.BertDetector.model", false]], "model (detector_benchmark.text_quality_evaluation.bertscorescorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.BertScoreScorer.model", false]], "model (detector_benchmark.text_quality_evaluation.prometheusscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.PrometheusScorer.model", false]], "model (detector_benchmark.text_quality_evaluation.scorer.bertscorescorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.BertScoreScorer.model", false]], "model (detector_benchmark.text_quality_evaluation.scorer.prometheusscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PrometheusScorer.model", false]], "model (detector_benchmark.text_quality_evaluation.scorer.semscorescorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.SemScoreScorer.model", false]], "model (detector_benchmark.text_quality_evaluation.semscorescorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.SemScoreScorer.model", false]], "model (openai_utils.openaiapi attribute)": [[53, "openai_utils.OpenAIAPI.model", false]], "model (transformers_config.transformersconfig attribute)": [[54, "transformers_config.TransformersConfig.model", false]], "model_config (detector_benchmark.generation.attack_loader.attackloader attribute)": [[16, "detector_benchmark.generation.attack_loader.AttackLoader.model_config", false]], "model_config (detector_benchmark.generation.attackloader attribute)": [[20, "detector_benchmark.generation.AttackLoader.model_config", false]], "model_config (detector_benchmark.generation.prompt_paraphrasing_attack.promptparaphrasingattack attribute)": [[22, "detector_benchmark.generation.prompt_paraphrasing_attack.PromptParaphrasingAttack.model_config", false]], "model_config (detector_benchmark.generation.promptparaphrasingattack attribute)": [[20, "detector_benchmark.generation.PromptParaphrasingAttack.model_config", false]], "model_name (configs.modelconfig attribute)": [[0, "configs.ModelConfig.model_name", false]], "model_name (detector_benchmark.generation.gen_loader.genloader attribute)": [[17, "detector_benchmark.generation.gen_loader.GenLoader.model_name", false]], "model_name (detector_benchmark.generation.genloader attribute)": [[20, "detector_benchmark.generation.GenLoader.model_name", false]], "modelconfig (class in configs)": [[0, "configs.ModelConfig", false]], "module": [[0, "module-configs", false], [1, "module-detector_benchmark.conf", false], [2, "module-detector_benchmark.create_dataset", false], [3, "module-detector_benchmark.dataset_loader.cnn_dataset", false], [4, "module-detector_benchmark.dataset_loader.dataset_loader_utils", false], [5, "module-detector_benchmark.dataset_loader.fake_true_dataset", false], [6, "module-detector_benchmark.dataset_loader", false], [7, "module-detector_benchmark.detector.bert_detector", false], [8, "module-detector_benchmark.detector.detector", false], [9, "module-detector_benchmark.detector.detector_loader", false], [10, "module-detector_benchmark.detector.fast_detect_gpt", false], [11, "module-detector_benchmark.detector.gpt_zero_detector", false], [12, "module-detector_benchmark.detector", false], [13, "module-detector_benchmark.detector.watermark_detector", false], [14, "module-detector_benchmark.generate_mappings", false], [15, "module-detector_benchmark.generation.article_generator", false], [16, "module-detector_benchmark.generation.attack_loader", false], [17, "module-detector_benchmark.generation.gen_loader", false], [18, "module-detector_benchmark.generation.gen_params_attack", false], [19, "module-detector_benchmark.generation.generator", false], [20, "module-detector_benchmark.generation", false], [21, "module-detector_benchmark.generation.prompt_attack", false], [22, "module-detector_benchmark.generation.prompt_paraphrasing_attack", false], [23, "module-detector_benchmark", false], [24, "module-detector_benchmark.pipeline.create_dataset_pipeline", false], [25, "module-detector_benchmark.pipeline.experiment_pipeline", false], [26, "module-detector_benchmark.pipeline.experiment_test_detector_pipeline", false], [27, "module-detector_benchmark.pipeline", false], [28, "module-detector_benchmark.pipeline.pipeline_utils", false], [29, "module-detector_benchmark.pipeline.text_quality_pipeline", false], [30, "module-detector_benchmark.run_human_eval", false], [31, "module-detector_benchmark.run_human_eval_plus", false], [32, "module-detector_benchmark.test_detector", false], [33, "module-detector_benchmark.test_text_quality", false], [34, "module-detector_benchmark.text_quality_evaluation", false], [35, "module-detector_benchmark.text_quality_evaluation.scorer", false], [36, "module-detector_benchmark.text_quality_evaluation.scorer_utils", false], [37, "module-detector_benchmark.watermark.auto_watermark", false], [38, "module-detector_benchmark.watermark.base", false], [39, "module-detector_benchmark.watermark.dip.dip", false], [40, "module-detector_benchmark.watermark.dip", false], [41, "module-detector_benchmark.watermark.exp.exp", false], [42, "module-detector_benchmark.watermark.exp", false], [43, "module-detector_benchmark.watermark", false], [44, "module-detector_benchmark.watermark.kgw", false], [45, "module-detector_benchmark.watermark.kgw.kgw", false], [46, "module-detector_benchmark.watermark.sir", false], [47, "module-detector_benchmark.watermark.sir.sir", false], [48, "module-detector_benchmark.watermark.sir.transform_model", false], [49, "module-detector_benchmark.watermark.sweet", false], [50, "module-detector_benchmark.watermark.sweet.sweet", false], [51, "module-gen_utils", false], [53, "module-openai_utils", false], [54, "module-transformers_config", false], [55, "module-utils", false]], "name (detector_benchmark.text_quality_evaluation.pplscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.PPLScorer.name", false]], "name (detector_benchmark.text_quality_evaluation.prometheusscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.PrometheusScorer.name", false]], "name (detector_benchmark.text_quality_evaluation.refscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.RefScorer.name", false]], "name (detector_benchmark.text_quality_evaluation.scorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.Scorer.name", false]], "name (detector_benchmark.text_quality_evaluation.scorer.comparescorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.CompareScorer.name", false]], "name (detector_benchmark.text_quality_evaluation.scorer.pplscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PPLScorer.name", false]], "name (detector_benchmark.text_quality_evaluation.scorer.prometheusscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PrometheusScorer.name", false]], "name (detector_benchmark.text_quality_evaluation.scorer.refscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.RefScorer.name", false]], "name (detector_benchmark.text_quality_evaluation.scorer.scorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.Scorer.name", false]], "name (detector_benchmark.text_quality_evaluation.scorer.selfscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.SelfScorer.name", false]], "name (detector_benchmark.text_quality_evaluation.selfscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.SelfScorer.name", false]], "non_attack_experiment_path (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.non_attack_experiment_path", false]], "non_attack_experiment_path (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.non_attack_experiment_path", false]], "num_layers (detector_benchmark.text_quality_evaluation.bertscorescorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.BertScoreScorer.num_layers", false]], "num_layers (detector_benchmark.text_quality_evaluation.scorer.bertscorescorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.BertScoreScorer.num_layers", false]], "openai_util (in module openai_utils)": [[53, "openai_utils.openai_util", false]], "openai_utils": [[53, "module-openai_utils", false]], "openaiapi (class in openai_utils)": [[53, "openai_utils.OpenAIAPI", false]], "paraphrase() (detector_benchmark.generation.prompt_paraphrasing_attack.paraphrasingattack method)": [[22, "detector_benchmark.generation.prompt_paraphrasing_attack.ParaphrasingAttack.paraphrase", false]], "paraphrase() (detector_benchmark.generation.prompt_paraphrasing_attack.promptparaphrasingattack method)": [[22, "detector_benchmark.generation.prompt_paraphrasing_attack.PromptParaphrasingAttack.paraphrase", false]], "paraphrase() (detector_benchmark.generation.promptparaphrasingattack method)": [[20, "detector_benchmark.generation.PromptParaphrasingAttack.paraphrase", false]], "paraphraser_config (detector_benchmark.generation.attack_loader.attackloader attribute)": [[16, "detector_benchmark.generation.attack_loader.AttackLoader.paraphraser_config", false]], "paraphraser_config (detector_benchmark.generation.attackloader attribute)": [[20, "detector_benchmark.generation.AttackLoader.paraphraser_config", false]], "paraphraser_model (detector_benchmark.generation.attack_loader.attackloader attribute)": [[16, "detector_benchmark.generation.attack_loader.AttackLoader.paraphraser_model", false]], "paraphraser_model (detector_benchmark.generation.attackloader attribute)": [[20, "detector_benchmark.generation.AttackLoader.paraphraser_model", false]], "paraphraser_model (detector_benchmark.generation.prompt_paraphrasing_attack.promptparaphrasingattack attribute)": [[22, "detector_benchmark.generation.prompt_paraphrasing_attack.PromptParaphrasingAttack.paraphraser_model", false]], "paraphraser_model (detector_benchmark.generation.promptparaphrasingattack attribute)": [[20, "detector_benchmark.generation.PromptParaphrasingAttack.paraphraser_model", false]], "paraphraser_prompt_config (detector_benchmark.generation.prompt_paraphrasing_attack.promptparaphrasingattack attribute)": [[22, "detector_benchmark.generation.prompt_paraphrasing_attack.PromptParaphrasingAttack.paraphraser_prompt_config", false]], "paraphraser_prompt_config (detector_benchmark.generation.promptparaphrasingattack attribute)": [[20, "detector_benchmark.generation.PromptParaphrasingAttack.paraphraser_prompt_config", false]], "paraphrasingattack (class in detector_benchmark.generation.prompt_paraphrasing_attack)": [[22, "detector_benchmark.generation.prompt_paraphrasing_attack.ParaphrasingAttack", false]], "pplscorer (class in detector_benchmark.text_quality_evaluation)": [[34, "detector_benchmark.text_quality_evaluation.PPLScorer", false]], "pplscorer (class in detector_benchmark.text_quality_evaluation.scorer)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PPLScorer", false]], "predict_gpt_zero() (detector_benchmark.detector.gpt_zero_detector.gptzero method)": [[11, "detector_benchmark.detector.gpt_zero_detector.GPTZero.predict_gpt_zero", false]], "predict_gpt_zero() (detector_benchmark.detector.gptzero method)": [[12, "detector_benchmark.detector.GPTZero.predict_gpt_zero", false]], "prefix_length (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.prefix_length", false]], "prefix_length (detector_benchmark.watermark.exp.exp.expconfig attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXPConfig.prefix_length", false]], "prefix_length (detector_benchmark.watermark.kgw.kgw.kgwconfig attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig.prefix_length", false]], "prefix_length (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.prefix_length", false]], "prefix_size (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader attribute)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.prefix_size", false]], "prefix_size (detector_benchmark.dataset_loader.cnndataloader attribute)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.prefix_size", false]], "prefix_size (detector_benchmark.dataset_loader.fake_true_dataset.faketruepairsdataloader attribute)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader.prefix_size", false]], "prefix_size (detector_benchmark.dataset_loader.faketruepairsdataloader attribute)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader.prefix_size", false]], "process_data() (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader method)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.process_data", false]], "process_data() (detector_benchmark.dataset_loader.cnndataloader method)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.process_data", false]], "process_data() (detector_benchmark.dataset_loader.fake_true_dataset.faketruepairsdataloader method)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader.process_data", false]], "process_data() (detector_benchmark.dataset_loader.faketruepairsdataloader method)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader.process_data", false]], "prometheusscorer (class in detector_benchmark.text_quality_evaluation)": [[34, "detector_benchmark.text_quality_evaluation.PrometheusScorer", false]], "prometheusscorer (class in detector_benchmark.text_quality_evaluation.scorer)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PrometheusScorer", false]], "promptattack (class in detector_benchmark.generation)": [[20, "detector_benchmark.generation.PromptAttack", false]], "promptattack (class in detector_benchmark.generation.prompt_attack)": [[21, "detector_benchmark.generation.prompt_attack.PromptAttack", false]], "promptconfig (class in configs)": [[0, "configs.PromptConfig", false]], "promptparaphrasingattack (class in detector_benchmark.generation)": [[20, "detector_benchmark.generation.PromptParaphrasingAttack", false]], "promptparaphrasingattack (class in detector_benchmark.generation.prompt_paraphrasing_attack)": [[22, "detector_benchmark.generation.prompt_paraphrasing_attack.PromptParaphrasingAttack", false]], "real_crits (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt.probestimatorfastdetectgpt attribute)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.ProbEstimatorFastDetectGPT.real_crits", false]], "real_crits (detector_benchmark.detector.fastdetectgpt.probestimatorfastdetectgpt attribute)": [[12, "detector_benchmark.detector.FastDetectGPT.ProbEstimatorFastDetectGPT.real_crits", false]], "reassign_scores() (detector_benchmark.text_quality_evaluation.prometheusscorer method)": [[34, "detector_benchmark.text_quality_evaluation.PrometheusScorer.reassign_scores", false]], "reassign_scores() (detector_benchmark.text_quality_evaluation.scorer.prometheusscorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PrometheusScorer.reassign_scores", false]], "ref_model (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt attribute)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.ref_model", false]], "ref_model (detector_benchmark.detector.fastdetectgpt attribute)": [[12, "detector_benchmark.detector.FastDetectGPT.ref_model", false]], "ref_tokenizer (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt attribute)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.ref_tokenizer", false]], "ref_tokenizer (detector_benchmark.detector.fastdetectgpt attribute)": [[12, "detector_benchmark.detector.FastDetectGPT.ref_tokenizer", false]], "refscorer (class in detector_benchmark.text_quality_evaluation)": [[34, "detector_benchmark.text_quality_evaluation.RefScorer", false]], "refscorer (class in detector_benchmark.text_quality_evaluation.scorer)": [[35, "detector_benchmark.text_quality_evaluation.scorer.RefScorer", false]], "regroup_pairs() (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader method)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.regroup_pairs", false]], "regroup_pairs() (detector_benchmark.dataset_loader.cnndataloader method)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.regroup_pairs", false]], "regroup_pairs() (detector_benchmark.dataset_loader.fake_true_dataset.faketruepairsdataloader method)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader.regroup_pairs", false]], "regroup_pairs() (detector_benchmark.dataset_loader.faketruepairsdataloader method)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader.regroup_pairs", false]], "relu (detector_benchmark.watermark.sir.transform_model.residualblock attribute)": [[48, "detector_benchmark.watermark.sir.transform_model.ResidualBlock.relu", false]], "remove_stopwords() (detector_benchmark.text_quality_evaluation.idfscorer method)": [[34, "detector_benchmark.text_quality_evaluation.IDFScorer.remove_stopwords", false]], "remove_stopwords() (detector_benchmark.text_quality_evaluation.scorer.idfscorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.IDFScorer.remove_stopwords", false]], "residualblock (class in detector_benchmark.watermark.sir.transform_model)": [[48, "detector_benchmark.watermark.sir.transform_model.ResidualBlock", false]], "return_loss_lists (detector_benchmark.pipeline.text_quality_pipeline.textqualitypipeline attribute)": [[29, "detector_benchmark.pipeline.text_quality_pipeline.TextQualityPipeline.return_loss_lists", false]], "return_loss_lists (detector_benchmark.pipeline.textqualitypipeline attribute)": [[27, "detector_benchmark.pipeline.TextQualityPipeline.return_loss_lists", false]], "reweight_logits() (detector_benchmark.watermark.dip.dip.diputils method)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils.reweight_logits", false]], "rng (detector_benchmark.watermark.dip.dip.diputils attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils.rng", false]], "rng (detector_benchmark.watermark.exp.exp.exputils attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXPUtils.rng", false]], "rng (detector_benchmark.watermark.kgw.kgw.kgwutils attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWUtils.rng", false]], "rng (detector_benchmark.watermark.sweet.sweet.sweet_utils attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Utils.rng", false]], "run_human_eval() (in module detector_benchmark.run_human_eval)": [[30, "detector_benchmark.run_human_eval.run_human_eval", false]], "run_human_eval() (in module detector_benchmark.run_human_eval_plus)": [[31, "detector_benchmark.run_human_eval_plus.run_human_eval", false]], "run_pipeline() (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline method)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.run_pipeline", false]], "run_pipeline() (detector_benchmark.pipeline.createdatasetpipeline method)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.run_pipeline", false]], "run_pipeline() (detector_benchmark.pipeline.experiment_pipeline.experimentpipeline method)": [[25, "detector_benchmark.pipeline.experiment_pipeline.ExperimentPipeline.run_pipeline", false]], "run_pipeline() (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline method)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.run_pipeline", false]], "run_pipeline() (detector_benchmark.pipeline.experimenttestdetectorpipeline method)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.run_pipeline", false]], "run_pipeline() (detector_benchmark.pipeline.text_quality_pipeline.textqualitypipeline method)": [[29, "detector_benchmark.pipeline.text_quality_pipeline.TextQualityPipeline.run_pipeline", false]], "run_pipeline() (detector_benchmark.pipeline.textqualitypipeline method)": [[27, "detector_benchmark.pipeline.TextQualityPipeline.run_pipeline", false]], "scale_dimension (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.scale_dimension", false]], "scale_vector() (detector_benchmark.watermark.sir.sir.sirutils method)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils.scale_vector", false]], "score() (detector_benchmark.text_quality_evaluation.bertscorescorer method)": [[34, "detector_benchmark.text_quality_evaluation.BertScoreScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.idfscorer method)": [[34, "detector_benchmark.text_quality_evaluation.IDFScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.pplscorer method)": [[34, "detector_benchmark.text_quality_evaluation.PPLScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.prometheusscorer method)": [[34, "detector_benchmark.text_quality_evaluation.PrometheusScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.refscorer method)": [[34, "detector_benchmark.text_quality_evaluation.RefScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.scorer method)": [[34, "detector_benchmark.text_quality_evaluation.Scorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.scorer.bertscorescorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.BertScoreScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.scorer.comparescorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.CompareScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.scorer.idfscorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.IDFScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.scorer.pplscorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PPLScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.scorer.prometheusscorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PrometheusScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.scorer.refscorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.RefScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.scorer.scorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.Scorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.scorer.selfscorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.SelfScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.scorer.semscorescorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.SemScoreScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.selfscorer method)": [[34, "detector_benchmark.text_quality_evaluation.SelfScorer.score", false]], "score() (detector_benchmark.text_quality_evaluation.semscorescorer method)": [[34, "detector_benchmark.text_quality_evaluation.SemScoreScorer.score", false]], "score_batch() (detector_benchmark.text_quality_evaluation.bertscorescorer method)": [[34, "detector_benchmark.text_quality_evaluation.BertScoreScorer.score_batch", false]], "score_batch() (detector_benchmark.text_quality_evaluation.idfscorer method)": [[34, "detector_benchmark.text_quality_evaluation.IDFScorer.score_batch", false]], "score_batch() (detector_benchmark.text_quality_evaluation.pplscorer method)": [[34, "detector_benchmark.text_quality_evaluation.PPLScorer.score_batch", false]], "score_batch() (detector_benchmark.text_quality_evaluation.prometheusscorer method)": [[34, "detector_benchmark.text_quality_evaluation.PrometheusScorer.score_batch", false]], "score_batch() (detector_benchmark.text_quality_evaluation.scorer.bertscorescorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.BertScoreScorer.score_batch", false]], "score_batch() (detector_benchmark.text_quality_evaluation.scorer.idfscorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.IDFScorer.score_batch", false]], "score_batch() (detector_benchmark.text_quality_evaluation.scorer.pplscorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PPLScorer.score_batch", false]], "score_batch() (detector_benchmark.text_quality_evaluation.scorer.prometheusscorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PrometheusScorer.score_batch", false]], "score_sequence() (detector_benchmark.watermark.dip.dip.diputils method)": [[39, "detector_benchmark.watermark.dip.dip.DIPUtils.score_sequence", false]], "score_sequence() (detector_benchmark.watermark.kgw.kgw.kgwutils method)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWUtils.score_sequence", false]], "score_sequence() (detector_benchmark.watermark.sweet.sweet.sweet_utils method)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Utils.score_sequence", false]], "scorer (class in detector_benchmark.text_quality_evaluation)": [[34, "detector_benchmark.text_quality_evaluation.Scorer", false]], "scorer (class in detector_benchmark.text_quality_evaluation.scorer)": [[35, "detector_benchmark.text_quality_evaluation.scorer.Scorer", false]], "scorer (detector_benchmark.pipeline.text_quality_pipeline.textqualitypipeline attribute)": [[29, "detector_benchmark.pipeline.text_quality_pipeline.TextQualityPipeline.scorer", false]], "scorer (detector_benchmark.pipeline.textqualitypipeline attribute)": [[27, "detector_benchmark.pipeline.TextQualityPipeline.scorer", false]], "scorer_model (detector_benchmark.text_quality_evaluation.pplscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.PPLScorer.scorer_model", false]], "scorer_model (detector_benchmark.text_quality_evaluation.scorer.pplscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PPLScorer.scorer_model", false]], "scorer_tokenizer (detector_benchmark.text_quality_evaluation.pplscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.PPLScorer.scorer_tokenizer", false]], "scorer_tokenizer (detector_benchmark.text_quality_evaluation.scorer.pplscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PPLScorer.scorer_tokenizer", false]], "scoring_model (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt attribute)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.scoring_model", false]], "scoring_model (detector_benchmark.detector.fastdetectgpt attribute)": [[12, "detector_benchmark.detector.FastDetectGPT.scoring_model", false]], "scoring_tokenizer (detector_benchmark.detector.fast_detect_gpt.fastdetectgpt attribute)": [[10, "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.scoring_tokenizer", false]], "scoring_tokenizer (detector_benchmark.detector.fastdetectgpt attribute)": [[12, "detector_benchmark.detector.FastDetectGPT.scoring_tokenizer", false]], "seed (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader attribute)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.seed", false]], "seed (detector_benchmark.dataset_loader.cnndataloader attribute)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.seed", false]], "seed (detector_benchmark.dataset_loader.fake_true_dataset.faketruepairsdataloader attribute)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader.seed", false]], "seed (detector_benchmark.dataset_loader.faketruepairsdataloader attribute)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader.seed", false]], "seed_rng() (detector_benchmark.watermark.exp.exp.exputils method)": [[41, "detector_benchmark.watermark.exp.exp.EXPUtils.seed_rng", false]], "selfscorer (class in detector_benchmark.text_quality_evaluation)": [[34, "detector_benchmark.text_quality_evaluation.SelfScorer", false]], "selfscorer (class in detector_benchmark.text_quality_evaluation.scorer)": [[35, "detector_benchmark.text_quality_evaluation.scorer.SelfScorer", false]], "semscorescorer (class in detector_benchmark.text_quality_evaluation)": [[34, "detector_benchmark.text_quality_evaluation.SemScoreScorer", false]], "semscorescorer (class in detector_benchmark.text_quality_evaluation.scorer)": [[35, "detector_benchmark.text_quality_evaluation.scorer.SemScoreScorer", false]], "sequence_length (detector_benchmark.watermark.exp.exp.expconfig attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXPConfig.sequence_length", false]], "set_attack_name() (detector_benchmark.generation.article_generator.articlegenerator method)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.set_attack_name", false]], "set_attack_name() (detector_benchmark.generation.articlegenerator method)": [[20, "detector_benchmark.generation.ArticleGenerator.set_attack_name", false]], "set_watermarking_scheme_name() (detector_benchmark.generation.article_generator.articlegenerator method)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.set_watermarking_scheme_name", false]], "set_watermarking_scheme_name() (detector_benchmark.generation.articlegenerator method)": [[20, "detector_benchmark.generation.ArticleGenerator.set_watermarking_scheme_name", false]], "shuffle_positions() (detector_benchmark.text_quality_evaluation.prometheusscorer method)": [[34, "detector_benchmark.text_quality_evaluation.PrometheusScorer.shuffle_positions", false]], "shuffle_positions() (detector_benchmark.text_quality_evaluation.scorer.prometheusscorer method)": [[35, "detector_benchmark.text_quality_evaluation.scorer.PrometheusScorer.shuffle_positions", false]], "sir (class in detector_benchmark.watermark.sir)": [[46, "detector_benchmark.watermark.sir.SIR", false]], "sir (class in detector_benchmark.watermark.sir.sir)": [[47, "detector_benchmark.watermark.sir.sir.SIR", false]], "sirconfig (class in detector_benchmark.watermark.sir.sir)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig", false]], "sirlogitsprocessor (class in detector_benchmark.watermark.sir.sir)": [[47, "detector_benchmark.watermark.sir.sir.SIRLogitsProcessor", false]], "sirutils (class in detector_benchmark.watermark.sir.sir)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils", false]], "skip_cache (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline attribute)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.skip_cache", false]], "skip_cache (detector_benchmark.pipeline.createdatasetpipeline attribute)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.skip_cache", false]], "skip_train_split (detector_benchmark.pipeline.create_dataset_pipeline.createdatasetpipeline attribute)": [[24, "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline.skip_train_split", false]], "skip_train_split (detector_benchmark.pipeline.createdatasetpipeline attribute)": [[27, "detector_benchmark.pipeline.CreateDatasetPipeline.skip_train_split", false]], "supported_models (openai_utils.openaiapi attribute)": [[53, "openai_utils.OpenAIAPI.supported_models", false]], "sweet (class in detector_benchmark.watermark.sweet)": [[49, "detector_benchmark.watermark.sweet.SWEET", false]], "sweet (class in detector_benchmark.watermark.sweet.sweet)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET", false]], "sweet_config (class in detector_benchmark.watermark.sweet.sweet)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config", false]], "sweet_logitsprocessor (class in detector_benchmark.watermark.sweet.sweet)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_LogitsProcessor", false]], "sweet_utils (class in detector_benchmark.watermark.sweet.sweet)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Utils", false]], "system_content (openai_utils.openaiapi attribute)": [[53, "openai_utils.OpenAIAPI.system_content", false]], "system_prompt (configs.promptconfig attribute)": [[0, "configs.PromptConfig.system_prompt", false]], "target_fpr (detector_benchmark.pipeline.experiment_test_detector_pipeline.experimenttestdetectorpipeline attribute)": [[26, "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline.target_fpr", false]], "target_fpr (detector_benchmark.pipeline.experimenttestdetectorpipeline attribute)": [[27, "detector_benchmark.pipeline.ExperimentTestDetectorPipeline.target_fpr", false]], "temperature (openai_utils.openaiapi attribute)": [[53, "openai_utils.OpenAIAPI.temperature", false]], "test_detector() (in module detector_benchmark.test_detector)": [[32, "detector_benchmark.test_detector.test_detector", false]], "test_fraction (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader attribute)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.test_fraction", false]], "test_fraction (detector_benchmark.dataset_loader.cnndataloader attribute)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.test_fraction", false]], "text_field (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader attribute)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.text_field", false]], "text_field (detector_benchmark.dataset_loader.cnndataloader attribute)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.text_field", false]], "text_field (detector_benchmark.dataset_loader.fake_true_dataset.faketruepairsdataloader attribute)": [[5, "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader.text_field", false]], "text_field (detector_benchmark.dataset_loader.faketruepairsdataloader attribute)": [[6, "detector_benchmark.dataset_loader.FakeTruePairsDataLoader.text_field", false]], "textqualitypipeline (class in detector_benchmark.pipeline)": [[27, "detector_benchmark.pipeline.TextQualityPipeline", false]], "textqualitypipeline (class in detector_benchmark.pipeline.text_quality_pipeline)": [[29, "detector_benchmark.pipeline.text_quality_pipeline.TextQualityPipeline", false]], "threshold (detector_benchmark.watermark.exp.exp.expconfig attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXPConfig.threshold", false]], "tokenizer (configs.modelconfig attribute)": [[0, "configs.ModelConfig.tokenizer", false]], "tokenizer (detector_benchmark.detector.bert_detector.bertdetector attribute)": [[7, "detector_benchmark.detector.bert_detector.BertDetector.tokenizer", false]], "tokenizer (detector_benchmark.detector.bertdetector attribute)": [[12, "detector_benchmark.detector.BertDetector.tokenizer", false]], "tokenizer (detector_benchmark.generation.generator.llmgenerator attribute)": [[19, "detector_benchmark.generation.generator.LLMGenerator.tokenizer", false]], "tokenizer (detector_benchmark.generation.llmgenerator attribute)": [[20, "detector_benchmark.generation.LLMGenerator.tokenizer", false]], "tokenizer (detector_benchmark.text_quality_evaluation.scorer.semscorescorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.SemScoreScorer.tokenizer", false]], "tokenizer (detector_benchmark.text_quality_evaluation.semscorescorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.SemScoreScorer.tokenizer", false]], "tokenizer (transformers_config.transformersconfig attribute)": [[54, "transformers_config.TransformersConfig.tokenizer", false]], "train_fraction (detector_benchmark.dataset_loader.cnn_dataset.cnndataloader attribute)": [[3, "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader.train_fraction", false]], "train_fraction (detector_benchmark.dataset_loader.cnndataloader attribute)": [[6, "detector_benchmark.dataset_loader.CNNDataLoader.train_fraction", false]], "transform_chat_template_with_prompt() (in module gen_utils)": [[51, "gen_utils.transform_chat_template_with_prompt", false]], "transform_model (detector_benchmark.watermark.sir.sir.sirutils attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRUtils.transform_model", false]], "transform_model_input_dim (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.transform_model_input_dim", false]], "transform_model_name (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.transform_model_name", false]], "transformers_config": [[54, "module-transformers_config", false]], "transformersconfig (class in transformers_config)": [[54, "transformers_config.TransformersConfig", false]], "transformmodel (class in detector_benchmark.watermark.sir.transform_model)": [[48, "detector_benchmark.watermark.sir.transform_model.TransformModel", false]], "use_chat_template (configs.modelconfig attribute)": [[0, "configs.ModelConfig.use_chat_template", false]], "user_prompt (configs.promptconfig attribute)": [[0, "configs.PromptConfig.user_prompt", false]], "utils": [[55, "module-utils", false]], "utils (detector_benchmark.watermark.dip.dip attribute)": [[40, "detector_benchmark.watermark.dip.DIP.utils", false]], "utils (detector_benchmark.watermark.dip.dip.dip attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIP.utils", false]], "utils (detector_benchmark.watermark.dip.dip.diplogitsprocessor attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPLogitsProcessor.utils", false]], "utils (detector_benchmark.watermark.exp.exp attribute)": [[42, "detector_benchmark.watermark.exp.EXP.utils", false]], "utils (detector_benchmark.watermark.exp.exp.exp attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXP.utils", false]], "utils (detector_benchmark.watermark.kgw.kgw attribute)": [[44, "detector_benchmark.watermark.kgw.KGW.utils", false]], "utils (detector_benchmark.watermark.kgw.kgw.kgw attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGW.utils", false]], "utils (detector_benchmark.watermark.kgw.kgw.kgwlogitsprocessor attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWLogitsProcessor.utils", false]], "utils (detector_benchmark.watermark.sir.sir attribute)": [[46, "detector_benchmark.watermark.sir.SIR.utils", false]], "utils (detector_benchmark.watermark.sir.sir.sir attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIR.utils", false]], "utils (detector_benchmark.watermark.sir.sir.sirlogitsprocessor attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRLogitsProcessor.utils", false]], "utils (detector_benchmark.watermark.sweet.sweet attribute)": [[49, "detector_benchmark.watermark.sweet.SWEET.utils", false]], "utils (detector_benchmark.watermark.sweet.sweet.sweet attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET.utils", false]], "utils (detector_benchmark.watermark.sweet.sweet.sweet_logitsprocessor attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_LogitsProcessor.utils", false]], "vectorizer (detector_benchmark.text_quality_evaluation.idfscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.IDFScorer.vectorizer", false]], "vectorizer (detector_benchmark.text_quality_evaluation.scorer.idfscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.IDFScorer.vectorizer", false]], "vocab_size (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.vocab_size", false]], "vocab_size (detector_benchmark.watermark.exp.exp.expconfig attribute)": [[41, "detector_benchmark.watermark.exp.exp.EXPConfig.vocab_size", false]], "vocab_size (detector_benchmark.watermark.kgw.kgw.kgwconfig attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig.vocab_size", false]], "vocab_size (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.vocab_size", false]], "vocab_size (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.vocab_size", false]], "vocab_size (transformers_config.transformersconfig attribute)": [[54, "transformers_config.TransformersConfig.vocab_size", false]], "watermark_mapping_names (in module detector_benchmark.watermark.auto_watermark)": [[37, "detector_benchmark.watermark.auto_watermark.WATERMARK_MAPPING_NAMES", false]], "watermark_name_from_alg_name() (in module detector_benchmark.watermark.auto_watermark)": [[37, "detector_benchmark.watermark.auto_watermark.watermark_name_from_alg_name", false]], "watermarkdetector (class in detector_benchmark.detector)": [[12, "detector_benchmark.detector.WatermarkDetector", false]], "watermarkdetector (class in detector_benchmark.detector.watermark_detector)": [[13, "detector_benchmark.detector.watermark_detector.WatermarkDetector", false]], "watermarking_scheme (detector_benchmark.detector.watermark_detector.watermarkdetector attribute)": [[13, "detector_benchmark.detector.watermark_detector.WatermarkDetector.watermarking_scheme", false]], "watermarking_scheme (detector_benchmark.detector.watermarkdetector attribute)": [[12, "detector_benchmark.detector.WatermarkDetector.watermarking_scheme", false]], "watermarking_scheme (detector_benchmark.generation.article_generator.articlegenerator attribute)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.watermarking_scheme", false]], "watermarking_scheme (detector_benchmark.generation.articlegenerator attribute)": [[20, "detector_benchmark.generation.ArticleGenerator.watermarking_scheme", false]], "watermarking_scheme (detector_benchmark.generation.attack_loader.attackloader attribute)": [[16, "detector_benchmark.generation.attack_loader.AttackLoader.watermarking_scheme", false]], "watermarking_scheme (detector_benchmark.generation.attackloader attribute)": [[20, "detector_benchmark.generation.AttackLoader.watermarking_scheme", false]], "watermarking_scheme_name (detector_benchmark.generation.article_generator.articlegenerator attribute)": [[15, "detector_benchmark.generation.article_generator.ArticleGenerator.watermarking_scheme_name", false]], "watermarking_scheme_name (detector_benchmark.generation.articlegenerator attribute)": [[20, "detector_benchmark.generation.ArticleGenerator.watermarking_scheme_name", false]], "weights_checkpoint (detector_benchmark.detector.detector_loader.detectorloader attribute)": [[9, "detector_benchmark.detector.detector_loader.DetectorLoader.weights_checkpoint", false]], "weights_checkpoint (detector_benchmark.detector.detectorloader attribute)": [[12, "detector_benchmark.detector.DetectorLoader.weights_checkpoint", false]], "word_to_idf (detector_benchmark.text_quality_evaluation.idfscorer attribute)": [[34, "detector_benchmark.text_quality_evaluation.IDFScorer.word_to_idf", false]], "word_to_idf (detector_benchmark.text_quality_evaluation.scorer.idfscorer attribute)": [[35, "detector_benchmark.text_quality_evaluation.scorer.IDFScorer.word_to_idf", false]], "z_threshold (detector_benchmark.watermark.dip.dip.dipconfig attribute)": [[39, "detector_benchmark.watermark.dip.dip.DIPConfig.z_threshold", false]], "z_threshold (detector_benchmark.watermark.kgw.kgw.kgwconfig attribute)": [[45, "detector_benchmark.watermark.kgw.kgw.KGWConfig.z_threshold", false]], "z_threshold (detector_benchmark.watermark.sir.sir.sirconfig attribute)": [[47, "detector_benchmark.watermark.sir.sir.SIRConfig.z_threshold", false]], "z_threshold (detector_benchmark.watermark.sweet.sweet.sweet_config attribute)": [[50, "detector_benchmark.watermark.sweet.sweet.SWEET_Config.z_threshold", false]]}, "objects": {"": [[0, 0, 0, "-", "configs"], [23, 0, 0, "-", "detector_benchmark"], [51, 0, 0, "-", "gen_utils"], [53, 0, 0, "-", "openai_utils"], [54, 0, 0, "-", "transformers_config"], [55, 0, 0, "-", "utils"]], "configs": [[0, 1, 1, "", "ModelConfig"], [0, 1, 1, "", "PromptConfig"]], "configs.ModelConfig": [[0, 2, 1, "", "chat_template_type"], [0, 2, 1, "", "device"], [0, 2, 1, "", "gen_params"], [0, 2, 1, "", "model_name"], [0, 2, 1, "", "tokenizer"], [0, 2, 1, "", "use_chat_template"]], "configs.PromptConfig": [[0, 2, 1, "", "system_prompt"], [0, 2, 1, "", "user_prompt"]], "detector_benchmark": [[1, 0, 0, "-", "conf"], [2, 0, 0, "-", "create_dataset"], [6, 0, 0, "-", "dataset_loader"], [12, 0, 0, "-", "detector"], [14, 0, 0, "-", "generate_mappings"], [20, 0, 0, "-", "generation"], [27, 0, 0, "-", "pipeline"], [30, 0, 0, "-", "run_human_eval"], [31, 0, 0, "-", "run_human_eval_plus"], [32, 0, 0, "-", "test_detector"], [33, 0, 0, "-", "test_text_quality"], [34, 0, 0, "-", "text_quality_evaluation"], [43, 0, 0, "-", "watermark"]], "detector_benchmark.create_dataset": [[2, 3, 1, "", "choose_attack"], [2, 3, 1, "", "choose_dataset"], [2, 3, 1, "", "choose_generator"], [2, 3, 1, "", "choose_watermarking_scheme"], [2, 3, 1, "", "create_dataset"], [2, 3, 1, "", "main"]], "detector_benchmark.dataset_loader": [[6, 1, 1, "", "CNNDataLoader"], [6, 1, 1, "", "FakeTruePairsDataLoader"], [3, 0, 0, "-", "cnn_dataset"], [4, 0, 0, "-", "dataset_loader_utils"], [5, 0, 0, "-", "fake_true_dataset"]], "detector_benchmark.dataset_loader.CNNDataLoader": [[6, 4, 1, "", "clean_dataset"], [6, 2, 1, "", "dataset_name"], [6, 2, 1, "", "dataset_size"], [6, 2, 1, "", "eval_fraction"], [6, 2, 1, "", "hf_dataset_path"], [6, 4, 1, "", "load_data"], [6, 2, 1, "", "max_sample_len"], [6, 2, 1, "", "prefix_size"], [6, 4, 1, "", "process_data"], [6, 4, 1, "", "regroup_pairs"], [6, 2, 1, "", "seed"], [6, 2, 1, "", "test_fraction"], [6, 2, 1, "", "text_field"], [6, 2, 1, "", "train_fraction"]], "detector_benchmark.dataset_loader.FakeTruePairsDataLoader": [[6, 2, 1, "", "dataset_name"], [6, 2, 1, "", "dataset_path"], [6, 2, 1, "", "dataset_size"], [6, 4, 1, "", "load_data"], [6, 2, 1, "", "load_local"], [6, 2, 1, "", "max_sample_len"], [6, 2, 1, "", "prefix_size"], [6, 4, 1, "", "process_data"], [6, 4, 1, "", "regroup_pairs"], [6, 2, 1, "", "seed"], [6, 2, 1, "", "text_field"]], "detector_benchmark.dataset_loader.cnn_dataset": [[3, 1, 1, "", "CNNDataLoader"]], "detector_benchmark.dataset_loader.cnn_dataset.CNNDataLoader": [[3, 4, 1, "", "clean_dataset"], [3, 2, 1, "", "dataset_name"], [3, 2, 1, "", "dataset_size"], [3, 2, 1, "", "eval_fraction"], [3, 2, 1, "", "hf_dataset_path"], [3, 4, 1, "", "load_data"], [3, 2, 1, "", "max_sample_len"], [3, 2, 1, "", "prefix_size"], [3, 4, 1, "", "process_data"], [3, 4, 1, "", "regroup_pairs"], [3, 2, 1, "", "seed"], [3, 2, 1, "", "test_fraction"], [3, 2, 1, "", "text_field"], [3, 2, 1, "", "train_fraction"]], "detector_benchmark.dataset_loader.dataset_loader_utils": [[4, 3, 1, "", "create_splits"], [4, 3, 1, "", "create_train_from_dataset"], [4, 3, 1, "", "filter_duplicates"]], "detector_benchmark.dataset_loader.fake_true_dataset": [[5, 1, 1, "", "FakeTruePairsDataLoader"]], "detector_benchmark.dataset_loader.fake_true_dataset.FakeTruePairsDataLoader": [[5, 2, 1, "", "dataset_name"], [5, 2, 1, "", "dataset_path"], [5, 2, 1, "", "dataset_size"], [5, 4, 1, "", "load_data"], [5, 2, 1, "", "load_local"], [5, 2, 1, "", "max_sample_len"], [5, 2, 1, "", "prefix_size"], [5, 4, 1, "", "process_data"], [5, 4, 1, "", "regroup_pairs"], [5, 2, 1, "", "seed"], [5, 2, 1, "", "text_field"]], "detector_benchmark.detector": [[12, 1, 1, "", "BertDetector"], [12, 1, 1, "", "Detector"], [12, 1, 1, "", "DetectorLoader"], [12, 1, 1, "", "FastDetectGPT"], [12, 1, 1, "", "GPTZero"], [12, 1, 1, "", "WatermarkDetector"], [7, 0, 0, "-", "bert_detector"], [8, 0, 0, "-", "detector"], [9, 0, 0, "-", "detector_loader"], [10, 0, 0, "-", "fast_detect_gpt"], [11, 0, 0, "-", "gpt_zero_detector"], [13, 0, 0, "-", "watermark_detector"]], "detector_benchmark.detector.BertDetector": [[12, 4, 1, "", "detect"], [12, 2, 1, "", "device"], [12, 2, 1, "", "model"], [12, 2, 1, "", "tokenizer"]], "detector_benchmark.detector.Detector": [[12, 4, 1, "", "detect"]], "detector_benchmark.detector.DetectorLoader": [[12, 2, 1, "", "cfg"], [12, 2, 1, "", "detector_name"], [12, 2, 1, "", "device"], [12, 4, 1, "", "load"], [12, 2, 1, "", "local_weights"], [12, 2, 1, "", "weights_checkpoint"]], "detector_benchmark.detector.FastDetectGPT": [[12, 1, 1, "", "ProbEstimatorFastDetectGPT"], [12, 4, 1, "", "detect"], [12, 2, 1, "", "device"], [12, 4, 1, "", "get_likelihood"], [12, 4, 1, "", "get_samples"], [12, 4, 1, "", "get_sampling_discrepancy"], [12, 4, 1, "", "get_sampling_discrepancy_analytic"], [12, 2, 1, "", "ref_model"], [12, 2, 1, "", "ref_tokenizer"], [12, 2, 1, "", "scoring_model"], [12, 2, 1, "", "scoring_tokenizer"]], "detector_benchmark.detector.FastDetectGPT.ProbEstimatorFastDetectGPT": [[12, 4, 1, "", "crit_to_prob"], [12, 2, 1, "", "fake_crits"], [12, 2, 1, "", "real_crits"]], "detector_benchmark.detector.GPTZero": [[12, 2, 1, "", "api_key"], [12, 2, 1, "", "debug_mode"], [12, 4, 1, "", "detect"], [12, 4, 1, "", "predict_gpt_zero"]], "detector_benchmark.detector.WatermarkDetector": [[12, 4, 1, "", "detect"], [12, 2, 1, "", "detection_threshold"], [12, 2, 1, "", "watermarking_scheme"]], "detector_benchmark.detector.bert_detector": [[7, 1, 1, "", "BertDetector"]], "detector_benchmark.detector.bert_detector.BertDetector": [[7, 4, 1, "", "detect"], [7, 2, 1, "", "device"], [7, 2, 1, "", "model"], [7, 2, 1, "", "tokenizer"]], "detector_benchmark.detector.detector": [[8, 1, 1, "", "Detector"]], "detector_benchmark.detector.detector.Detector": [[8, 4, 1, "", "detect"]], "detector_benchmark.detector.detector_loader": [[9, 1, 1, "", "DetectorLoader"]], "detector_benchmark.detector.detector_loader.DetectorLoader": [[9, 2, 1, "", "cfg"], [9, 2, 1, "", "detector_name"], [9, 2, 1, "", "device"], [9, 4, 1, "", "load"], [9, 2, 1, "", "local_weights"], [9, 2, 1, "", "weights_checkpoint"]], "detector_benchmark.detector.fast_detect_gpt": [[10, 1, 1, "", "FastDetectGPT"]], "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT": [[10, 1, 1, "", "ProbEstimatorFastDetectGPT"], [10, 4, 1, "", "detect"], [10, 2, 1, "", "device"], [10, 4, 1, "", "get_likelihood"], [10, 4, 1, "", "get_samples"], [10, 4, 1, "", "get_sampling_discrepancy"], [10, 4, 1, "", "get_sampling_discrepancy_analytic"], [10, 2, 1, "", "ref_model"], [10, 2, 1, "", "ref_tokenizer"], [10, 2, 1, "", "scoring_model"], [10, 2, 1, "", "scoring_tokenizer"]], "detector_benchmark.detector.fast_detect_gpt.FastDetectGPT.ProbEstimatorFastDetectGPT": [[10, 4, 1, "", "crit_to_prob"], [10, 2, 1, "", "fake_crits"], [10, 2, 1, "", "real_crits"]], "detector_benchmark.detector.gpt_zero_detector": [[11, 1, 1, "", "GPTZero"]], "detector_benchmark.detector.gpt_zero_detector.GPTZero": [[11, 2, 1, "", "api_key"], [11, 2, 1, "", "debug_mode"], [11, 4, 1, "", "detect"], [11, 4, 1, "", "predict_gpt_zero"]], "detector_benchmark.detector.watermark_detector": [[13, 1, 1, "", "WatermarkDetector"]], "detector_benchmark.detector.watermark_detector.WatermarkDetector": [[13, 4, 1, "", "detect"], [13, 2, 1, "", "detection_threshold"], [13, 2, 1, "", "watermarking_scheme"]], "detector_benchmark.generate_mappings": [[14, 3, 1, "", "generate_mapping"], [14, 3, 1, "", "main"]], "detector_benchmark.generation": [[20, 1, 1, "", "ArticleGenerator"], [20, 1, 1, "", "AttackLoader"], [20, 1, 1, "", "GenLoader"], [20, 1, 1, "", "GenParamsAttack"], [20, 1, 1, "", "LLMGenerator"], [20, 1, 1, "", "PromptAttack"], [20, 1, 1, "", "PromptParaphrasingAttack"], [15, 0, 0, "-", "article_generator"], [16, 0, 0, "-", "attack_loader"], [17, 0, 0, "-", "gen_loader"], [18, 0, 0, "-", "gen_params_attack"], [19, 0, 0, "-", "generator"], [21, 0, 0, "-", "prompt_attack"], [22, 0, 0, "-", "prompt_paraphrasing_attack"]], "detector_benchmark.generation.ArticleGenerator": [[20, 2, 1, "", "attack_name"], [20, 2, 1, "", "gen_model"], [20, 2, 1, "", "gen_model_config"], [20, 2, 1, "", "gen_name"], [20, 2, 1, "", "gen_prompt_config"], [20, 4, 1, "", "generate_adversarial_text"], [20, 4, 1, "", "generate_text"], [20, 2, 1, "", "max_sample_len"], [20, 4, 1, "", "set_attack_name"], [20, 4, 1, "", "set_watermarking_scheme_name"], [20, 2, 1, "", "watermarking_scheme"], [20, 2, 1, "", "watermarking_scheme_name"]], "detector_benchmark.generation.AttackLoader": [[20, 2, 1, "", "attack_type"], [20, 2, 1, "", "cfg"], [20, 2, 1, "", "gen_model"], [20, 4, 1, "", "load"], [20, 2, 1, "", "max_sample_len"], [20, 2, 1, "", "model_config"], [20, 2, 1, "", "paraphraser_config"], [20, 2, 1, "", "paraphraser_model"], [20, 2, 1, "", "watermarking_scheme"]], "detector_benchmark.generation.GenLoader": [[20, 2, 1, "", "device"], [20, 2, 1, "", "gen_params"], [20, 2, 1, "", "gen_tokenizer_only"], [20, 4, 1, "", "load"], [20, 2, 1, "", "model_name"]], "detector_benchmark.generation.GenParamsAttack": [[20, 2, 1, "", "adversarial_gen_params"], [20, 2, 1, "", "attack_name"], [20, 4, 1, "", "generate_adversarial_text"]], "detector_benchmark.generation.LLMGenerator": [[20, 2, 1, "", "device"], [20, 4, 1, "", "forward"], [20, 4, 1, "", "forward_debug"], [20, 2, 1, "", "gen_params"], [20, 2, 1, "", "generator"], [20, 2, 1, "", "tokenizer"]], "detector_benchmark.generation.PromptAttack": [[20, 2, 1, "", "adversarial_prompt_config"], [20, 2, 1, "", "attack_name"], [20, 4, 1, "", "generate_adversarial_text"]], "detector_benchmark.generation.PromptParaphrasingAttack": [[20, 2, 1, "", "attack_name"], [20, 4, 1, "", "generate_adversarial_text"], [20, 2, 1, "", "model_config"], [20, 4, 1, "", "paraphrase"], [20, 2, 1, "", "paraphraser_model"], [20, 2, 1, "", "paraphraser_prompt_config"]], "detector_benchmark.generation.article_generator": [[15, 1, 1, "", "ArticleGenerator"]], "detector_benchmark.generation.article_generator.ArticleGenerator": [[15, 2, 1, "", "attack_name"], [15, 2, 1, "", "gen_model"], [15, 2, 1, "", "gen_model_config"], [15, 2, 1, "", "gen_name"], [15, 2, 1, "", "gen_prompt_config"], [15, 4, 1, "", "generate_adversarial_text"], [15, 4, 1, "", "generate_text"], [15, 2, 1, "", "max_sample_len"], [15, 4, 1, "", "set_attack_name"], [15, 4, 1, "", "set_watermarking_scheme_name"], [15, 2, 1, "", "watermarking_scheme"], [15, 2, 1, "", "watermarking_scheme_name"]], "detector_benchmark.generation.attack_loader": [[16, 1, 1, "", "AttackLoader"]], "detector_benchmark.generation.attack_loader.AttackLoader": [[16, 2, 1, "", "attack_type"], [16, 2, 1, "", "cfg"], [16, 2, 1, "", "gen_model"], [16, 4, 1, "", "load"], [16, 2, 1, "", "max_sample_len"], [16, 2, 1, "", "model_config"], [16, 2, 1, "", "paraphraser_config"], [16, 2, 1, "", "paraphraser_model"], [16, 2, 1, "", "watermarking_scheme"]], "detector_benchmark.generation.gen_loader": [[17, 1, 1, "", "GenLoader"]], "detector_benchmark.generation.gen_loader.GenLoader": [[17, 2, 1, "", "device"], [17, 2, 1, "", "gen_params"], [17, 2, 1, "", "gen_tokenizer_only"], [17, 4, 1, "", "load"], [17, 2, 1, "", "model_name"]], "detector_benchmark.generation.gen_params_attack": [[18, 1, 1, "", "GenParamsAttack"]], "detector_benchmark.generation.gen_params_attack.GenParamsAttack": [[18, 2, 1, "", "adversarial_gen_params"], [18, 2, 1, "", "attack_name"], [18, 4, 1, "", "generate_adversarial_text"]], "detector_benchmark.generation.generator": [[19, 1, 1, "", "LLMGenerator"]], "detector_benchmark.generation.generator.LLMGenerator": [[19, 2, 1, "", "device"], [19, 4, 1, "", "forward"], [19, 4, 1, "", "forward_debug"], [19, 2, 1, "", "gen_params"], [19, 2, 1, "", "generator"], [19, 2, 1, "", "tokenizer"]], "detector_benchmark.generation.prompt_attack": [[21, 1, 1, "", "PromptAttack"]], "detector_benchmark.generation.prompt_attack.PromptAttack": [[21, 2, 1, "", "adversarial_prompt_config"], [21, 2, 1, "", "attack_name"], [21, 4, 1, "", "generate_adversarial_text"]], "detector_benchmark.generation.prompt_paraphrasing_attack": [[22, 1, 1, "", "ParaphrasingAttack"], [22, 1, 1, "", "PromptParaphrasingAttack"]], "detector_benchmark.generation.prompt_paraphrasing_attack.ParaphrasingAttack": [[22, 4, 1, "", "paraphrase"]], "detector_benchmark.generation.prompt_paraphrasing_attack.PromptParaphrasingAttack": [[22, 2, 1, "", "attack_name"], [22, 4, 1, "", "generate_adversarial_text"], [22, 2, 1, "", "model_config"], [22, 4, 1, "", "paraphrase"], [22, 2, 1, "", "paraphraser_model"], [22, 2, 1, "", "paraphraser_prompt_config"]], "detector_benchmark.pipeline": [[27, 1, 1, "", "CreateDatasetPipeline"], [27, 1, 1, "", "ExperimentTestDetectorPipeline"], [27, 1, 1, "", "TextQualityPipeline"], [24, 0, 0, "-", "create_dataset_pipeline"], [25, 0, 0, "-", "experiment_pipeline"], [26, 0, 0, "-", "experiment_test_detector_pipeline"], [28, 0, 0, "-", "pipeline_utils"], [29, 0, 0, "-", "text_quality_pipeline"]], "detector_benchmark.pipeline.CreateDatasetPipeline": [[27, 2, 1, "", "attack"], [27, 2, 1, "", "batch_size"], [27, 2, 1, "", "cfg"], [27, 4, 1, "", "create_experiment_dataset"], [27, 2, 1, "", "dataset_loader"], [27, 2, 1, "", "experiment_name"], [27, 2, 1, "", "experiment_path"], [27, 2, 1, "", "generator_name"], [27, 2, 1, "", "log"], [27, 2, 1, "", "log_path"], [27, 4, 1, "", "run_pipeline"], [27, 2, 1, "", "skip_cache"], [27, 2, 1, "", "skip_train_split"]], "detector_benchmark.pipeline.ExperimentTestDetectorPipeline": [[27, 2, 1, "", "batch_size"], [27, 2, 1, "", "cfg"], [27, 2, 1, "", "dataset_experiment_name"], [27, 2, 1, "", "dataset_experiment_path"], [27, 2, 1, "", "detector"], [27, 2, 1, "", "detector_name"], [27, 4, 1, "", "evaluate_detector"], [27, 2, 1, "", "experiment_name"], [27, 2, 1, "", "experiment_path"], [27, 4, 1, "", "find_threshold"], [27, 2, 1, "", "log"], [27, 2, 1, "", "log_path"], [27, 2, 1, "", "non_attack_experiment_path"], [27, 4, 1, "", "run_pipeline"], [27, 2, 1, "", "target_fpr"]], "detector_benchmark.pipeline.TextQualityPipeline": [[27, 2, 1, "", "batch_size"], [27, 2, 1, "", "dataset"], [27, 2, 1, "", "eval_human"], [27, 2, 1, "", "return_loss_lists"], [27, 4, 1, "", "run_pipeline"], [27, 2, 1, "", "scorer"]], "detector_benchmark.pipeline.create_dataset_pipeline": [[24, 1, 1, "", "CreateDatasetPipeline"]], "detector_benchmark.pipeline.create_dataset_pipeline.CreateDatasetPipeline": [[24, 2, 1, "", "attack"], [24, 2, 1, "", "batch_size"], [24, 2, 1, "", "cfg"], [24, 4, 1, "", "create_experiment_dataset"], [24, 2, 1, "", "dataset_loader"], [24, 2, 1, "", "experiment_name"], [24, 2, 1, "", "experiment_path"], [24, 2, 1, "", "generator_name"], [24, 2, 1, "", "log"], [24, 2, 1, "", "log_path"], [24, 4, 1, "", "run_pipeline"], [24, 2, 1, "", "skip_cache"], [24, 2, 1, "", "skip_train_split"]], "detector_benchmark.pipeline.experiment_pipeline": [[25, 1, 1, "", "ExperimentPipeline"]], "detector_benchmark.pipeline.experiment_pipeline.ExperimentPipeline": [[25, 4, 1, "", "run_pipeline"]], "detector_benchmark.pipeline.experiment_test_detector_pipeline": [[26, 1, 1, "", "ExperimentTestDetectorPipeline"]], "detector_benchmark.pipeline.experiment_test_detector_pipeline.ExperimentTestDetectorPipeline": [[26, 2, 1, "", "batch_size"], [26, 2, 1, "", "cfg"], [26, 2, 1, "", "dataset_experiment_name"], [26, 2, 1, "", "dataset_experiment_path"], [26, 2, 1, "", "detector"], [26, 2, 1, "", "detector_name"], [26, 4, 1, "", "evaluate_detector"], [26, 2, 1, "", "experiment_name"], [26, 2, 1, "", "experiment_path"], [26, 4, 1, "", "find_threshold"], [26, 2, 1, "", "log"], [26, 2, 1, "", "log_path"], [26, 2, 1, "", "non_attack_experiment_path"], [26, 4, 1, "", "run_pipeline"], [26, 2, 1, "", "target_fpr"]], "detector_benchmark.pipeline.pipeline_utils": [[28, 3, 1, "", "compute_bootstrap_metrics"], [28, 3, 1, "", "create_logger"], [28, 3, 1, "", "create_logger_file"], [28, 3, 1, "", "get_threshold_for_results"]], "detector_benchmark.pipeline.text_quality_pipeline": [[29, 1, 1, "", "TextQualityPipeline"]], "detector_benchmark.pipeline.text_quality_pipeline.TextQualityPipeline": [[29, 2, 1, "", "batch_size"], [29, 2, 1, "", "dataset"], [29, 2, 1, "", "eval_human"], [29, 2, 1, "", "return_loss_lists"], [29, 4, 1, "", "run_pipeline"], [29, 2, 1, "", "scorer"]], "detector_benchmark.run_human_eval": [[30, 3, 1, "", "generate_batch_completions"], [30, 3, 1, "", "generate_one_completion"], [30, 3, 1, "", "run_human_eval"]], "detector_benchmark.run_human_eval_plus": [[31, 3, 1, "", "generate_batch_completions"], [31, 3, 1, "", "generate_one_completion"], [31, 3, 1, "", "run_human_eval"]], "detector_benchmark.test_detector": [[32, 3, 1, "", "main"], [32, 3, 1, "", "test_detector"]], "detector_benchmark.test_text_quality": [[33, 3, 1, "", "evaluate_text_quality"], [33, 3, 1, "", "init_pipelines"], [33, 3, 1, "", "main"]], "detector_benchmark.text_quality_evaluation": [[34, 1, 1, "", "BertScoreScorer"], [34, 1, 1, "", "IDFScorer"], [34, 1, 1, "", "PPLScorer"], [34, 1, 1, "", "PrometheusScorer"], [34, 1, 1, "", "RefScorer"], [34, 1, 1, "", "Scorer"], [34, 1, 1, "", "SelfScorer"], [34, 1, 1, "", "SemScoreScorer"], [35, 0, 0, "-", "scorer"], [36, 0, 0, "-", "scorer_utils"]], "detector_benchmark.text_quality_evaluation.BertScoreScorer": [[34, 2, 1, "", "model"], [34, 2, 1, "", "num_layers"], [34, 4, 1, "", "score"], [34, 4, 1, "", "score_batch"]], "detector_benchmark.text_quality_evaluation.IDFScorer": [[34, 2, 1, "", "corpus"], [34, 2, 1, "", "feature_names"], [34, 2, 1, "", "filtered_corpus"], [34, 2, 1, "", "idf_values"], [34, 4, 1, "", "remove_stopwords"], [34, 4, 1, "", "score"], [34, 4, 1, "", "score_batch"], [34, 2, 1, "", "vectorizer"], [34, 2, 1, "", "word_to_idf"]], "detector_benchmark.text_quality_evaluation.PPLScorer": [[34, 2, 1, "", "device"], [34, 2, 1, "", "metric"], [34, 2, 1, "", "name"], [34, 4, 1, "", "score"], [34, 4, 1, "", "score_batch"], [34, 2, 1, "", "scorer_model"], [34, 2, 1, "", "scorer_tokenizer"]], "detector_benchmark.text_quality_evaluation.PrometheusScorer": [[34, 2, 1, "", "compare_human_to_ai"], [34, 2, 1, "", "judge"], [34, 2, 1, "", "model"], [34, 2, 1, "", "name"], [34, 4, 1, "", "reassign_scores"], [34, 4, 1, "", "score"], [34, 4, 1, "", "score_batch"], [34, 4, 1, "", "shuffle_positions"]], "detector_benchmark.text_quality_evaluation.RefScorer": [[34, 2, 1, "", "name"], [34, 4, 1, "", "score"]], "detector_benchmark.text_quality_evaluation.Scorer": [[34, 2, 1, "", "name"], [34, 4, 1, "", "score"]], "detector_benchmark.text_quality_evaluation.SelfScorer": [[34, 2, 1, "", "name"], [34, 4, 1, "", "score"]], "detector_benchmark.text_quality_evaluation.SemScoreScorer": [[34, 4, 1, "", "mean_pooling"], [34, 2, 1, "", "model"], [34, 4, 1, "", "score"], [34, 2, 1, "", "tokenizer"]], "detector_benchmark.text_quality_evaluation.scorer": [[35, 1, 1, "", "BertScoreScorer"], [35, 1, 1, "", "CompareScorer"], [35, 1, 1, "", "IDFScorer"], [35, 1, 1, "", "PPLScorer"], [35, 1, 1, "", "PrometheusScorer"], [35, 1, 1, "", "RefScorer"], [35, 1, 1, "", "Scorer"], [35, 1, 1, "", "SelfScorer"], [35, 1, 1, "", "SemScoreScorer"]], "detector_benchmark.text_quality_evaluation.scorer.BertScoreScorer": [[35, 2, 1, "", "model"], [35, 2, 1, "", "num_layers"], [35, 4, 1, "", "score"], [35, 4, 1, "", "score_batch"]], "detector_benchmark.text_quality_evaluation.scorer.CompareScorer": [[35, 2, 1, "", "name"], [35, 4, 1, "", "score"]], "detector_benchmark.text_quality_evaluation.scorer.IDFScorer": [[35, 2, 1, "", "corpus"], [35, 2, 1, "", "feature_names"], [35, 2, 1, "", "filtered_corpus"], [35, 2, 1, "", "idf_values"], [35, 4, 1, "", "remove_stopwords"], [35, 4, 1, "", "score"], [35, 4, 1, "", "score_batch"], [35, 2, 1, "", "vectorizer"], [35, 2, 1, "", "word_to_idf"]], "detector_benchmark.text_quality_evaluation.scorer.PPLScorer": [[35, 2, 1, "", "device"], [35, 2, 1, "", "metric"], [35, 2, 1, "", "name"], [35, 4, 1, "", "score"], [35, 4, 1, "", "score_batch"], [35, 2, 1, "", "scorer_model"], [35, 2, 1, "", "scorer_tokenizer"]], "detector_benchmark.text_quality_evaluation.scorer.PrometheusScorer": [[35, 2, 1, "", "compare_human_to_ai"], [35, 2, 1, "", "judge"], [35, 2, 1, "", "model"], [35, 2, 1, "", "name"], [35, 4, 1, "", "reassign_scores"], [35, 4, 1, "", "score"], [35, 4, 1, "", "score_batch"], [35, 4, 1, "", "shuffle_positions"]], "detector_benchmark.text_quality_evaluation.scorer.RefScorer": [[35, 2, 1, "", "name"], [35, 4, 1, "", "score"]], "detector_benchmark.text_quality_evaluation.scorer.Scorer": [[35, 2, 1, "", "name"], [35, 4, 1, "", "score"]], "detector_benchmark.text_quality_evaluation.scorer.SelfScorer": [[35, 2, 1, "", "name"], [35, 4, 1, "", "score"]], "detector_benchmark.text_quality_evaluation.scorer.SemScoreScorer": [[35, 4, 1, "", "mean_pooling"], [35, 2, 1, "", "model"], [35, 4, 1, "", "score"], [35, 2, 1, "", "tokenizer"]], "detector_benchmark.text_quality_evaluation.scorer_utils": [[36, 3, 1, "", "bootstrap_score"]], "detector_benchmark.watermark": [[37, 0, 0, "-", "auto_watermark"], [38, 0, 0, "-", "base"], [40, 0, 0, "-", "dip"], [42, 0, 0, "-", "exp"], [44, 0, 0, "-", "kgw"], [46, 0, 0, "-", "sir"], [49, 0, 0, "-", "sweet"]], "detector_benchmark.watermark.auto_watermark": [[37, 1, 1, "", "AutoWatermark"], [37, 5, 1, "", "WATERMARK_MAPPING_NAMES"], [37, 3, 1, "", "watermark_name_from_alg_name"]], "detector_benchmark.watermark.auto_watermark.AutoWatermark": [[37, 4, 1, "", "load"]], "detector_benchmark.watermark.base": [[38, 1, 1, "", "BaseWatermark"]], "detector_benchmark.watermark.base.BaseWatermark": [[38, 4, 1, "", "detect_watermark"], [38, 4, 1, "", "generate_unwatermarked_text"], [38, 4, 1, "", "generate_watermarked_text"]], "detector_benchmark.watermark.dip": [[40, 1, 1, "", "DIP"], [39, 0, 0, "-", "dip"]], "detector_benchmark.watermark.dip.DIP": [[40, 2, 1, "", "config"], [40, 4, 1, "", "detect_watermark"], [40, 4, 1, "", "generate"], [40, 4, 1, "", "generate_watermarked_text"], [40, 2, 1, "", "logits_processor"], [40, 2, 1, "", "utils"]], "detector_benchmark.watermark.dip.dip": [[39, 1, 1, "", "DIP"], [39, 1, 1, "", "DIPConfig"], [39, 1, 1, "", "DIPLogitsProcessor"], [39, 1, 1, "", "DIPUtils"]], "detector_benchmark.watermark.dip.dip.DIP": [[39, 2, 1, "", "config"], [39, 4, 1, "", "detect_watermark"], [39, 4, 1, "", "generate"], [39, 4, 1, "", "generate_watermarked_text"], [39, 2, 1, "", "logits_processor"], [39, 2, 1, "", "utils"]], "detector_benchmark.watermark.dip.dip.DIPConfig": [[39, 2, 1, "", "alpha"], [39, 2, 1, "", "config_dict"], [39, 2, 1, "", "device"], [39, 2, 1, "", "gamma"], [39, 2, 1, "", "gen_kwargs"], [39, 2, 1, "", "generation_model"], [39, 2, 1, "", "generation_tokenizer"], [39, 2, 1, "", "hash_key"], [39, 2, 1, "", "ignore_history"], [39, 2, 1, "", "prefix_length"], [39, 2, 1, "", "vocab_size"], [39, 2, 1, "", "z_threshold"]], "detector_benchmark.watermark.dip.dip.DIPLogitsProcessor": [[39, 4, 1, "", "__call__"], [39, 4, 1, "", "_apply_watermark"], [39, 2, 1, "", "config"], [39, 2, 1, "", "utils"]], "detector_benchmark.watermark.dip.dip.DIPUtils": [[39, 4, 1, "", "_extract_context_code"], [39, 4, 1, "", "_get_dip_score"], [39, 4, 1, "", "_get_green_token_quantile"], [39, 4, 1, "", "_get_rng_seed"], [39, 2, 1, "", "cc_history"], [39, 2, 1, "", "config"], [39, 4, 1, "", "from_random"], [39, 4, 1, "", "get_seed_for_cipher"], [39, 4, 1, "", "reweight_logits"], [39, 2, 1, "", "rng"], [39, 4, 1, "", "score_sequence"]], "detector_benchmark.watermark.exp": [[42, 1, 1, "", "EXP"], [41, 0, 0, "-", "exp"]], "detector_benchmark.watermark.exp.EXP": [[42, 2, 1, "", "config"], [42, 4, 1, "", "detect_watermark"], [42, 4, 1, "", "generate"], [42, 4, 1, "", "generate_watermarked_text"], [42, 2, 1, "", "utils"]], "detector_benchmark.watermark.exp.exp": [[41, 1, 1, "", "EXP"], [41, 1, 1, "", "EXPConfig"], [41, 1, 1, "", "EXPUtils"]], "detector_benchmark.watermark.exp.exp.EXP": [[41, 2, 1, "", "config"], [41, 4, 1, "", "detect_watermark"], [41, 4, 1, "", "generate"], [41, 4, 1, "", "generate_watermarked_text"], [41, 2, 1, "", "utils"]], "detector_benchmark.watermark.exp.exp.EXPConfig": [[41, 2, 1, "", "device"], [41, 2, 1, "", "gen_kwargs"], [41, 2, 1, "", "generation_model"], [41, 2, 1, "", "generation_tokenizer"], [41, 2, 1, "", "hash_key"], [41, 2, 1, "", "prefix_length"], [41, 2, 1, "", "sequence_length"], [41, 2, 1, "", "threshold"], [41, 2, 1, "", "vocab_size"]], "detector_benchmark.watermark.exp.exp.EXPUtils": [[41, 4, 1, "", "_value_transformation"], [41, 2, 1, "", "config"], [41, 4, 1, "", "exp_sampling"], [41, 2, 1, "", "rng"], [41, 4, 1, "", "seed_rng"]], "detector_benchmark.watermark.kgw": [[44, 1, 1, "", "KGW"], [45, 0, 0, "-", "kgw"]], "detector_benchmark.watermark.kgw.KGW": [[44, 2, 1, "", "config"], [44, 4, 1, "", "detect_watermark"], [44, 4, 1, "", "generate"], [44, 4, 1, "", "generate_watermarked_text"], [44, 2, 1, "", "logits_processor"], [44, 2, 1, "", "utils"]], "detector_benchmark.watermark.kgw.kgw": [[45, 1, 1, "", "KGW"], [45, 1, 1, "", "KGWConfig"], [45, 1, 1, "", "KGWLogitsProcessor"], [45, 1, 1, "", "KGWUtils"]], "detector_benchmark.watermark.kgw.kgw.KGW": [[45, 2, 1, "", "config"], [45, 4, 1, "", "detect_watermark"], [45, 4, 1, "", "generate"], [45, 4, 1, "", "generate_watermarked_text"], [45, 2, 1, "", "logits_processor"], [45, 2, 1, "", "utils"]], "detector_benchmark.watermark.kgw.kgw.KGWConfig": [[45, 2, 1, "", "config_dict"], [45, 2, 1, "", "delta"], [45, 2, 1, "", "device"], [45, 2, 1, "", "gamma"], [45, 2, 1, "", "gen_kwargs"], [45, 2, 1, "", "generation_model"], [45, 2, 1, "", "generation_tokenizer"], [45, 2, 1, "", "hash_key"], [45, 2, 1, "", "prefix_length"], [45, 2, 1, "", "vocab_size"], [45, 2, 1, "", "z_threshold"]], "detector_benchmark.watermark.kgw.kgw.KGWLogitsProcessor": [[45, 4, 1, "", "__call__"], [45, 4, 1, "", "_bias_greenlist_logits"], [45, 4, 1, "", "_calc_greenlist_mask"], [45, 2, 1, "", "config"], [45, 2, 1, "", "utils"]], "detector_benchmark.watermark.kgw.kgw.KGWUtils": [[45, 4, 1, "", "_compute_z_score"], [45, 4, 1, "", "_seed_rng"], [45, 2, 1, "", "config"], [45, 4, 1, "", "get_greenlist_ids"], [45, 2, 1, "", "rng"], [45, 4, 1, "", "score_sequence"]], "detector_benchmark.watermark.sir": [[46, 1, 1, "", "SIR"], [47, 0, 0, "-", "sir"], [48, 0, 0, "-", "transform_model"]], "detector_benchmark.watermark.sir.SIR": [[46, 2, 1, "", "config"], [46, 4, 1, "", "detect_watermark"], [46, 4, 1, "", "generate"], [46, 4, 1, "", "generate_watermarked_text"], [46, 2, 1, "", "logits_processor"], [46, 2, 1, "", "utils"]], "detector_benchmark.watermark.sir.sir": [[47, 1, 1, "", "SIR"], [47, 1, 1, "", "SIRConfig"], [47, 1, 1, "", "SIRLogitsProcessor"], [47, 1, 1, "", "SIRUtils"]], "detector_benchmark.watermark.sir.sir.SIR": [[47, 2, 1, "", "config"], [47, 4, 1, "", "detect_watermark"], [47, 4, 1, "", "generate"], [47, 4, 1, "", "generate_watermarked_text"], [47, 2, 1, "", "logits_processor"], [47, 2, 1, "", "utils"]], "detector_benchmark.watermark.sir.sir.SIRConfig": [[47, 2, 1, "", "chunk_length"], [47, 2, 1, "", "config_dict"], [47, 2, 1, "", "delta"], [47, 2, 1, "", "device"], [47, 2, 1, "", "embedding_model_path"], [47, 2, 1, "", "gen_kwargs"], [47, 2, 1, "", "generation_model"], [47, 2, 1, "", "generation_tokenizer"], [47, 2, 1, "", "mapping_name"], [47, 2, 1, "", "scale_dimension"], [47, 2, 1, "", "transform_model_input_dim"], [47, 2, 1, "", "transform_model_name"], [47, 2, 1, "", "vocab_size"], [47, 2, 1, "", "z_threshold"]], "detector_benchmark.watermark.sir.sir.SIRLogitsProcessor": [[47, 4, 1, "", "__call__"], [47, 4, 1, "", "_bias_logits"], [47, 2, 1, "", "config"], [47, 2, 1, "", "utils"]], "detector_benchmark.watermark.sir.sir.SIRUtils": [[47, 4, 1, "", "_get_context_sentence"], [47, 4, 1, "", "_get_mapping"], [47, 4, 1, "", "_get_transform_model"], [47, 2, 1, "", "config"], [47, 2, 1, "", "embedding_model"], [47, 2, 1, "", "embedding_tokenizer"], [47, 4, 1, "", "get_bias"], [47, 4, 1, "", "get_embedding"], [47, 4, 1, "", "get_text_split"], [47, 2, 1, "", "mapping"], [47, 4, 1, "", "scale_vector"], [47, 2, 1, "", "transform_model"]], "detector_benchmark.watermark.sir.transform_model": [[48, 1, 1, "", "ResidualBlock"], [48, 1, 1, "", "TransformModel"]], "detector_benchmark.watermark.sir.transform_model.ResidualBlock": [[48, 2, 1, "", "fc"], [48, 4, 1, "", "forward"], [48, 2, 1, "", "relu"]], "detector_benchmark.watermark.sir.transform_model.TransformModel": [[48, 4, 1, "", "forward"], [48, 2, 1, "", "layers"]], "detector_benchmark.watermark.sweet": [[49, 1, 1, "", "SWEET"], [50, 0, 0, "-", "sweet"]], "detector_benchmark.watermark.sweet.SWEET": [[49, 2, 1, "", "config"], [49, 4, 1, "", "detect_watermark"], [49, 4, 1, "", "generate"], [49, 4, 1, "", "generate_watermarked_text"], [49, 2, 1, "", "logits_processor"], [49, 2, 1, "", "utils"]], "detector_benchmark.watermark.sweet.sweet": [[50, 1, 1, "", "SWEET"], [50, 1, 1, "", "SWEET_Config"], [50, 1, 1, "", "SWEET_LogitsProcessor"], [50, 1, 1, "", "SWEET_Utils"]], "detector_benchmark.watermark.sweet.sweet.SWEET": [[50, 2, 1, "", "config"], [50, 4, 1, "", "detect_watermark"], [50, 4, 1, "", "generate"], [50, 4, 1, "", "generate_watermarked_text"], [50, 2, 1, "", "logits_processor"], [50, 2, 1, "", "utils"]], "detector_benchmark.watermark.sweet.sweet.SWEET_Config": [[50, 2, 1, "", "config_dict"], [50, 2, 1, "", "delta"], [50, 2, 1, "", "device"], [50, 2, 1, "", "entropy_threshold"], [50, 2, 1, "", "gamma"], [50, 2, 1, "", "gen_kwargs"], [50, 2, 1, "", "generation_model"], [50, 2, 1, "", "generation_tokenizer"], [50, 2, 1, "", "hash_key"], [50, 2, 1, "", "prefix_length"], [50, 2, 1, "", "vocab_size"], [50, 2, 1, "", "z_threshold"]], "detector_benchmark.watermark.sweet.sweet.SWEET_LogitsProcessor": [[50, 4, 1, "", "__call__"], [50, 4, 1, "", "_bias_greenlist_logits"], [50, 4, 1, "", "_calc_greenlist_mask"], [50, 2, 1, "", "config"], [50, 2, 1, "", "utils"]], "detector_benchmark.watermark.sweet.sweet.SWEET_Utils": [[50, 4, 1, "", "_compute_z_score"], [50, 4, 1, "", "_seed_rng"], [50, 4, 1, "", "calculate_entropy"], [50, 2, 1, "", "config"], [50, 4, 1, "", "get_greenlist_ids"], [50, 2, 1, "", "rng"], [50, 4, 1, "", "score_sequence"]], "gen_utils": [[51, 3, 1, "", "transform_chat_template_with_prompt"]], "openai_utils": [[53, 1, 1, "", "OpenAIAPI"], [53, 5, 1, "", "openai_util"]], "openai_utils.OpenAIAPI": [[53, 4, 1, "", "get_result"], [53, 4, 1, "", "get_result_from_gpt3_5"], [53, 4, 1, "", "get_result_from_gpt4"], [53, 2, 1, "", "model"], [53, 2, 1, "", "supported_models"], [53, 2, 1, "", "system_content"], [53, 2, 1, "", "temperature"]], "transformers_config": [[54, 1, 1, "", "TransformersConfig"]], "transformers_config.TransformersConfig": [[54, 2, 1, "", "device"], [54, 2, 1, "", "gen_kwargs"], [54, 2, 1, "", "model"], [54, 2, 1, "", "tokenizer"], [54, 2, 1, "", "vocab_size"]], "utils": [[55, 3, 1, "", "create_directory_for_file"], [55, 3, 1, "", "create_logger"], [55, 3, 1, "", "create_logger_file"], [55, 3, 1, "", "load_config_file"], [55, 3, 1, "", "load_json_as_list"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:data"}, "terms": {"": [62, 64], "0": [3, 6, 7, 8, 10, 11, 12, 13, 41, 59, 64, 65, 69], "05130": 58, "06356": 60, "07710": 60, "1": [3, 6, 7, 12, 13, 15, 18, 19, 20, 21, 22, 24, 26, 27, 34, 35, 41, 52, 59, 64, 65, 69], "10": [3, 5, 6, 62, 69], "100": 69, "1000": [28, 36], "10226": 60, "1024": 48, "11": 62, "12": 62, "128": [69, 70], "15060": 60, "2": [30, 31, 59, 69, 70], "200": 69, "220": 69, "2301": 60, "2305": 60, "2310": [58, 60], "3": [53, 59, 62, 63, 65], "300": [14, 48], "30000": 14, "4": [48, 53, 67], "40": [34, 35, 69], "42": [3, 5, 6, 36], "5": [10, 11, 12, 53], "50": 69, "500": [3, 5, 6, 48, 69], "5000": 69, "5b": 59, "64": [27, 29], "7b": 59, "8": [3, 6, 62, 69], "80": 69, "8b": 59, "95": 69, "A": [15, 18, 19, 20, 21, 22, 60, 69], "For": [62, 64], "If": [19, 20], "In": 69, "It": [69, 70], "No": 60, "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 51, 63, 64, 65, 67, 69, 70], "Then": [26, 27], "To": [63, 64, 65, 66, 67], "__call__": [39, 45, 47, 50, 67], "__init__": [37, 67], "_apply_watermark": 39, "_bias_greenlist_logit": [45, 50], "_bias_logit": 47, "_calc_greenlist_mask": [45, 50], "_compute_z_scor": [45, 50], "_extract_context_cod": 39, "_get_context_sent": 47, "_get_dip_scor": 39, "_get_green_token_quantil": 39, "_get_map": 47, "_get_rng_se": 39, "_get_transform_model": 47, "_seed_rng": [45, 50], "_value_transform": 41, "abc": [7, 8, 10, 12, 13, 15, 20, 25, 34, 35], "abise": [3, 6], "abl": [63, 65, 70], "abov": [65, 69, 70], "abstract": [8, 12, 15, 20, 24, 25, 26, 27, 34, 35], "access": 60, "activ": 62, "ad": [63, 65, 67], "add": [39, 45, 47, 56, 60, 62, 69], "adversari": [15, 18, 20, 21, 56], "adversarial_gen_param": [18, 20], "adversarial_prompt_config": [20, 21], "after": [20, 22], "ai": [3, 5, 6, 7, 12, 64], "algorithm": [37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 64], "algorithm_config": [37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50], "all": [15, 20, 62, 69], "allow": 70, "alpha": 39, "alreadi": [55, 63, 65, 67], "alwai": 64, "among": [3, 6], "an": [7, 8, 10, 12, 13, 15, 19, 20, 21, 24, 25, 26, 27, 34, 35, 37, 56, 58, 64, 68, 69], "ani": [39, 63, 64], "anoth": 57, "api": [11, 12, 53, 58], "api_kei": [11, 12], "appli": [39, 64, 69], "ar": [7, 12, 13, 64, 66, 69, 70], "arg": [10, 12, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 54], "argmax": [7, 12, 65], "arrai": 47, "articl": [3, 6, 24, 27], "article_gener": [16, 18, 20, 21, 22, 52], "articlegener": [15, 16, 18, 20, 21, 22, 24, 27, 63], "arxiv": [58, 60], "assum": [69, 70], "attack": [15, 16, 20, 24, 27, 56, 62, 68, 70], "attack_load": [20, 52, 57, 63], "attack_nam": [15, 18, 20, 21, 22], "attack_typ": [2, 16, 20], "attackload": [16, 20], "attention_mask": [34, 35], "auto": 52, "auto_watermark": [12, 13, 15, 16, 18, 19, 20, 21, 22, 43, 52, 67], "autoapi": 52, "automodelforcausallm": [19, 20], "autotoken": 51, "autowatermark": [12, 13, 15, 16, 18, 19, 20, 21, 22, 37], "avail": [60, 62], "avoid": 62, "base": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 63, 64, 65, 69, 70], "basewatermark": [38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50], "bash_script": [69, 70], "batch": [7, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22], "batch_siz": [7, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 24, 26, 27, 29, 30, 31, 34, 35, 63, 65, 69, 70], "batched_bia": 47, "becaus": 70, "been": 64, "benchmark_ai_news_detect": 62, "bert_detector": [12, 52], "bertdetector": [7, 12], "bertscorescor": [34, 35], "beta": 59, "between": 41, "bia": [45, 47, 50], "bloat": [3, 6], "blob": [34, 35], "bool": [9, 11, 12, 17, 20, 24, 27, 28, 29, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51], "boolean": 69, "booltensor": [45, 50], "bootstrap": 28, "bootstrap_scor": 36, "both": 65, "bpm": [60, 67], "byte": 39, "calcul": [45, 50], "calculate_entropi": 50, "call": [3, 6, 58], "can": [60, 63, 65, 69], "cannot": 37, "case": [69, 70], "cc_histori": 39, "cf": [69, 70], "cfg": [2, 9, 12, 16, 20, 24, 26, 27, 32, 33], "charact": 69, "chat": [51, 59], "chat_template_typ": 0, "check": 62, "choos": 62, "choose_attack": 2, "choose_dataset": 2, "choose_gener": 2, "choose_watermarking_schem": 2, "chosen": [3, 5, 6], "chunk": 47, "chunk_length": 47, "cipher": 39, "class": [63, 64, 65, 66, 67], "clean": [3, 6], "clean_dataset": [3, 6], "clone": 62, "cnn_dailymail": [3, 6, 69], "cnn_dataset": [6, 52], "cnndataload": [3, 6], "co": [34, 35], "code": [39, 60, 67], "com": [60, 62, 67], "compare_detector": 70, "compare_human_to_ai": [34, 35], "compare_watermark": 70, "comparescor": [34, 35], "compat": 62, "complet": [69, 70], "comput": [26, 27, 28, 45, 50, 65], "compute_bootstrap_metr": 28, "conda": 62, "condit": 58, "conf": [23, 52, 57, 58, 60, 63, 64, 65, 67, 69, 70], "config": [15, 16, 17, 18, 19, 20, 21, 22, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 64, 69], "config_dict": [39, 45, 47, 50], "configur": [9, 12, 17, 20, 54, 55, 56, 63, 65, 67], "constructor": [63, 65, 67], "contain": [3, 5, 6, 19, 20, 39, 41, 45, 47, 50, 52, 63, 64, 65], "context": [15, 18, 19, 20, 21, 22, 39, 47, 67], "context_cod": 39, "continu": 63, "convert": [10, 12], "core": 67, "corpu": [34, 35], "correct": [64, 69, 70], "correspond": [64, 67, 69, 70], "could": 69, "count": [45, 50], "cover": 70, "creat": [4, 7, 8, 10, 12, 13, 15, 20, 24, 27, 28, 34, 35, 37, 52, 55, 65, 69], "create_dataset": [23, 52, 62, 69], "create_dataset_pipelin": [27, 52], "create_directory_for_fil": 55, "create_experiment_dataset": [24, 27], "create_logg": [28, 55], "create_logger_fil": [28, 55], "create_split": 4, "create_train_from_dataset": 4, "createdatasetpipelin": [24, 27], "credit": 67, "crit": [10, 12], "crit_to_prob": [10, 12], "criterion": [10, 12], "cu118": 62, "cuda": [54, 62], "current": 39, "current_token": 39, "curvatur": 58, "cut": 69, "data": [26, 27, 28, 62, 64, 69, 70], "data_fold": 69, "data_split": [26, 27], "dataset": [3, 4, 5, 6, 24, 26, 27, 29, 56, 63, 68, 69, 70], "dataset_experiment_nam": [26, 27], "dataset_experiment_path": [26, 27], "dataset_fak": [3, 5, 6], "dataset_load": [23, 24, 27, 52, 64], "dataset_loader_util": [6, 52], "dataset_nam": [2, 3, 5, 6, 69], "dataset_path": [5, 6, 27, 29], "dataset_path_compar": [27, 29], "dataset_s": [2, 3, 5, 6, 69], "dataset_tru": [3, 5, 6], "datasetdict": [3, 4, 5, 6, 64], "deberta": [34, 35], "debug": [11, 12], "debug_mod": [11, 12], "decod": 69, "def": [63, 64, 65, 67], "default": [7, 12, 19, 20, 26, 27, 51, 69, 70], "delta": [45, 47, 50], "depend": 58, "describ": 64, "detail": 70, "detect": [7, 8, 10, 11, 12, 13, 26, 27, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 56, 58, 62, 68, 70], "detect_watermark": [38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50], "detectgpt": 58, "detection_bas": 70, "detection_experiment_nam": 70, "detection_test_result": 70, "detection_threshold": [7, 8, 10, 11, 12, 13, 26, 27, 65], "detector": [23, 26, 27, 52, 57, 63, 64, 68, 69], "detector_benchmark": [52, 57, 58, 59, 60, 63, 65, 66, 67, 70], "detector_load": [12, 52, 58, 65], "detector_nam": [9, 12, 26, 27, 70], "detectorload": [9, 12], "determin": 69, "devic": [0, 2, 7, 9, 10, 12, 17, 19, 20, 34, 35, 39, 41, 45, 47, 50, 54], "dict": [9, 11, 12, 17, 18, 20, 24, 26, 27, 28, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 55], "dictconfig": [2, 16, 20, 32, 33], "dictionari": [55, 67], "differ": 64, "dim": 48, "dimens": 14, "dip": [43, 52, 60], "dipconfig": 39, "diplogitsprocessor": 39, "diputil": 39, "directli": 37, "directori": [55, 69], "discrep": [10, 12], "distribut": 60, "do_sampl": 69, "document": [52, 56], "doe": 55, "don": 70, "done": [20, 22], "download": 62, "driver": 62, "duplic": 4, "e": 62, "each": [50, 64, 69], "easili": 60, "effici": 58, "effort": 56, "either": [15, 20, 63], "electra": 58, "electra_larg": 58, "element": [3, 5, 6], "embed": 47, "embedding_model": 47, "embedding_model_path": 47, "embedding_token": 47, "empti": [64, 69], "encod": [39, 40, 41, 42, 44, 45, 46, 47, 49, 50], "encoded_prompt": [39, 40, 41, 42, 44, 45, 46, 47, 49, 50], "ensur": 69, "entropi": 50, "entropy_list": 50, "entropy_threshold": 50, "environ": [58, 62], "error": 37, "estim": [10, 12], "eval": [4, 64, 69], "eval_fract": [3, 6], "eval_human": [27, 29], "eval_json_path": 28, "eval_s": 4, "eval_set": [26, 27], "eval_text": [34, 35], "eval_text1": [34, 35], "eval_text2": [34, 35], "eval_texts1": [34, 35], "eval_texts2": [34, 35], "evalu": [26, 27, 29, 34, 35], "evaluate_detector": [26, 27], "evaluate_text_qu": 33, "evas": 71, "exampl": [57, 63, 65, 67, 69, 70], "except": [69, 70], "exist": [55, 63, 64], "exp": [43, 52, 60], "exp_sampl": 41, "expconfig": 41, "experi": [24, 25, 26, 27, 69, 70], "experiment_nam": [24, 26, 27, 69, 70], "experiment_path": [24, 26, 27], "experiment_pipelin": [24, 26, 27, 29, 52], "experiment_test_detector_pipelin": [27, 52], "experimentpipelin": [24, 25, 26, 27, 29], "experimenttestdetectorpipelin": [26, 27], "exponenti": 41, "exputil": 41, "extract": 39, "fake": [3, 6, 24, 27, 64, 69], "fake_articl": [15, 18, 20], "fake_crit": [10, 12], "fake_true_dataset": [3, 6, 52], "faketruepairsdataload": [3, 5, 6, 24, 27, 64], "fals": [9, 11, 12, 17, 20, 24, 26, 27, 28, 29, 34, 35, 51, 55, 69], "fast": 58, "fast_detect_gpt": [12, 52, 58, 62, 70], "fastdetectgpt": [10, 12], "fc": 48, "feature_nam": [34, 35], "field": [3, 4, 6, 64, 70], "file": [39, 41, 45, 47, 50, 55, 58, 63, 64, 65, 66, 67, 69, 70], "file_path": 55, "filter": 4, "filter_dupl": 4, "filtered_corpu": [34, 35], "find": [26, 27, 69], "find_threshold": [26, 27], "fine": 70, "first": [3, 5, 6, 26, 27, 64, 69], "flip": 28, "flip_label": 28, "float": [3, 4, 6, 7, 8, 10, 11, 12, 13, 26, 27, 28, 34, 35, 39, 45, 50, 65], "floattensor": [39, 45, 47, 50, 67], "folder": [64, 67, 70], "follow": [63, 64, 65, 66, 67, 69, 70], "fool": 57, "forc": 69, "forced_prefix": 51, "format": 64, "forward": [19, 20, 48], "forward_debug": [19, 20], "fpr": [26, 27, 69], "from": [3, 4, 6, 10, 12, 17, 19, 20, 26, 27, 37, 39, 41, 47, 53, 55, 58, 60, 64, 65, 67, 69], "from_random": 39, "full": [64, 69], "fulli": 64, "function": [3, 6, 20, 22, 24, 26, 27, 39, 41, 45, 47, 50, 63, 64, 65, 67], "gamma": [39, 45, 50], "gen": 2, "gen_config": [15, 18, 20, 21, 22, 30, 31], "gen_experiment_nam": 70, "gen_kwarg": [39, 41, 45, 47, 50, 54], "gen_load": [20, 52, 59, 66], "gen_model": [2, 15, 16, 18, 20, 21, 22, 30, 31, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50], "gen_model_config": [15, 20], "gen_nam": [15, 20], "gen_param": [0, 2, 17, 19, 20], "gen_parameters_attack": [18, 20], "gen_params_attack": [20, 52, 57, 63], "gen_prompt_config": [15, 18, 20, 21, 22], "gen_tokenizer_onli": [17, 20], "gen_util": 52, "gener": [7, 12, 23, 24, 27, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 56, 57, 58, 60, 63, 64, 65, 68, 70], "generate_adversarial_text": [15, 18, 20, 21, 22, 63], "generate_batch_complet": [30, 31], "generate_map": [23, 52], "generate_no_watermark_dataset": 69, "generate_one_complet": [30, 31], "generate_text": [15, 20], "generate_unwatermarked_text": 38, "generate_watermarked_text": [38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50], "generated_dataset": 69, "generating_dataset": 69, "generation_bas": [62, 69, 70], "generation_config": 64, "generation_model": [39, 41, 45, 47, 50], "generation_token": [39, 41, 45, 47, 50], "generator_nam": [24, 27, 69, 70], "genload": [17, 20], "genparamsattack": [18, 20], "get": [10, 12, 37, 39, 45, 47, 50, 53], "get_bia": 47, "get_embed": 47, "get_greenlist_id": [45, 50], "get_likelihood": [10, 12], "get_result": 53, "get_result_from_gpt3_5": 53, "get_result_from_gpt4": 53, "get_sampl": [10, 12], "get_sampling_discrep": [10, 12], "get_sampling_discrepancy_analyt": [10, 12], "get_seed_for_ciph": 39, "get_text_split": 47, "get_threshold_for_result": 28, "git": 62, "github": [60, 62, 67], "given": [7, 9, 12, 13, 26, 27, 39, 45, 50, 69], "go": 4, "gpt": [11, 12, 53], "gpt_zero": 58, "gpt_zero_api_kei": 58, "gpt_zero_detector": [12, 52], "gptzero": [11, 12, 58], "gpu": [69, 70], "greedi": 69, "green": 50, "green_token_flag": [39, 45], "greenlist": [45, 50], "greenlist_bia": [45, 50], "greenlist_mask": [45, 50], "greenlist_token_id": [45, 50], "guid": [63, 65], "ha": [64, 69], "hash_kei": [39, 41, 45, 50], "have": [63, 64, 65, 67, 70], "helper": [7, 8, 10, 12, 13, 15, 20, 34, 35, 39, 41, 45, 47, 50], "here": [62, 69, 70], "hf_dataset_path": [3, 6], "hidden_dim": 48, "highli": 62, "http": [34, 35, 60, 62, 67], "huggingfac": [34, 35, 64], "huggingfaceh4": 59, "human": [3, 5, 6, 7, 12, 64, 65], "hydra": [69, 70], "i": [3, 5, 6, 7, 12, 15, 20, 26, 27, 37, 57, 60, 63, 65, 67, 69], "id": [45, 50], "identifi": 70, "idf_valu": [34, 35], "idfscor": [34, 35], "ignore_histori": 39, "implement": [64, 67], "includ": 69, "index": 62, "indic": 69, "individu": 70, "inform": [11, 12], "inherit": [7, 8, 10, 12, 13, 15, 20, 34, 35, 63, 64, 65, 67], "init": [9, 12, 17, 20], "init_pipelin": 33, "initi": [20, 22, 39, 41, 45, 47, 50], "input": [7, 12, 13, 15, 18, 19, 20, 21, 22, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 63, 67], "input_dim": [47, 48], "input_fil": 55, "input_id": [39, 41, 45, 47, 50, 67], "insid": [64, 67], "instanc": [19, 20, 37], "instanti": 37, "instead": [7, 12], "instruct": [34, 35, 59], "int": [2, 3, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 34, 35, 36, 39, 45, 47, 50, 63, 65], "invari": 60, "involv": 63, "ipython": 62, "issu": 62, "its": [67, 70], "json": 55, "judg": [34, 35], "k": 69, "kei": [11, 12, 39, 58], "kgw": [43, 52], "kgwconfig": 45, "kgwlogitsprocessor": 45, "kgwutil": 45, "know": 70, "kwarg": [37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 54], "label": [7, 10, 12, 13, 26, 27, 28, 64, 65], "labl": [7, 12], "languag": 60, "larg": [58, 60], "last": [41, 45, 50], "layer": 48, "least": [63, 65, 67], "length": 69, "let": 64, "level": [39, 40, 41, 42, 44, 45, 46, 47, 49, 50], "librari": 37, "like": [39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 63], "likelihood": [10, 12], "link": 60, "list": [7, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 26, 27, 28, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 55, 62, 63, 65, 69, 70], "llama": 59, "llama3_3": 59, "llama3_instruct_3": [59, 69], "llm": [57, 65, 67, 68, 70, 71], "llm_detector": 62, "llmgener": [15, 16, 17, 18, 19, 20, 21, 22], "load": [3, 6, 9, 12, 16, 17, 20, 37, 39, 41, 45, 47, 50, 55, 63, 65, 66, 70], "load_config_fil": 55, "load_data": [3, 5, 6, 64], "load_json_as_list": 55, "load_loc": [5, 6], "loader": [64, 66], "local": 70, "local_weight": [9, 12], "log": [24, 26, 27, 33], "log_fil": [28, 55], "log_path": [24, 26, 27, 28, 55], "logger": [28, 55], "logic": 50, "logit": [7, 8, 10, 11, 12, 13, 19, 20, 26, 27, 39, 45, 47, 50, 65, 67], "logits_pos_class": 65, "logits_processor": [39, 40, 44, 45, 46, 47, 49, 50], "logits_ref": [10, 12], "logits_scor": [10, 12], "logitsprocessor": [19, 20, 39, 45, 47, 50, 67], "longtensor": [39, 41, 45, 47, 50, 67], "look": [63, 65, 70], "machin": 58, "made": 65, "mai": 70, "main": [2, 3, 6, 14, 24, 26, 27, 32, 33, 34, 35], "map": 47, "mapping_nam": 47, "markllm": [60, 67], "marluxiaboss": 62, "mask": [39, 45, 50], "match": 70, "max_new_token": 69, "max_sample_len": [2, 3, 5, 6, 15, 16, 18, 20, 21, 22, 69], "maximum": 69, "mean": 69, "mean_pool": [34, 35], "measur": [34, 35], "merg": [3, 5, 6], "meta": 59, "method": [3, 6, 37, 41, 67], "metric": [26, 27, 28, 34, 35], "microsoft": [34, 35], "min_new_token": 69, "min_prefix_len": 45, "minimum": 69, "mnli": [34, 35], "model": [7, 10, 12, 15, 17, 19, 20, 34, 35, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 53, 54, 58, 60, 69], "model_config": [2, 16, 19, 20, 22, 37, 38, 39, 41, 45, 47, 50], "model_nam": [0, 2, 17, 20, 47], "model_output": [34, 35], "modelconfig": [0, 15, 16, 17, 18, 19, 20, 21, 22, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50], "modifi": [15, 20, 63, 65, 66, 67], "modul": [12, 20], "modular": 56, "more": 70, "most": [60, 67], "much": 56, "n": 62, "n_bootstrap": [28, 36], "name": [15, 20, 28, 34, 35, 37, 47, 55, 69, 70], "nb_paraphras": [20, 22], "need": [58, 63, 64, 65, 66, 67, 70], "new": [28, 55, 56, 60, 63, 67, 68, 69], "nn": [7, 12, 17, 19, 20, 48], "no_attack": 57, "non": [56, 59], "non_attack_experiment_path": [26, 27], "none": [2, 9, 10, 12, 15, 16, 18, 19, 20, 21, 22, 27, 28, 29, 34, 35, 37, 41, 45, 50, 51, 54, 55], "nor": 64, "normal": 57, "note": [60, 63, 64, 69, 70], "now": [57, 64], "num_lay": [34, 35, 48], "number": [20, 22, 28, 39, 41, 50, 69, 70], "numpi": 47, "nvidia": 62, "observ": [45, 50], "observed_count": [45, 50], "obtain": [26, 27], "omegaconf": [2, 16, 20, 32, 33], "one": [37, 60, 64], "ones": 64, "onli": [57, 63, 64], "openai": 53, "openai_util": 52, "openaiapi": 53, "option": 51, "org": [58, 60, 62], "other": [62, 66, 69, 70], "outlin": [69, 70], "output": 57, "output_dim": 48, "own": [67, 70], "p": 69, "p_logit": 39, "packag": 62, "page": [52, 70], "pair": [3, 5, 6], "parallel": [69, 70], "paramet": [39, 41, 45, 47, 50, 51, 57, 62, 63], "paraphras": [20, 22, 57], "paraphraser_config": [2, 16, 20, 22], "paraphraser_model": [2, 16, 20, 22], "paraphraser_prompt_config": [20, 22], "paraphrasing_attack": [20, 22], "paraphrasingattack": 22, "path": 55, "penalti": 69, "permut": 39, "perplex": [34, 35], "pip": 62, "pipelin": [23, 52], "pipeline_util": [27, 52], "point": [15, 20], "posit": [7, 11, 12, 13, 26, 27, 65], "possibl": 56, "pplscorer": [34, 35], "ppt": 60, "pred": [26, 27, 65], "predict": [7, 8, 10, 11, 12, 13, 26, 27, 65], "predict_gpt_zero": [11, 12], "preds_at_threshold": [26, 27, 65], "prefix": [3, 5, 6, 15, 18, 20, 21, 22, 51, 63, 64, 69], "prefix_length": [39, 41, 45, 50], "prefix_s": [2, 3, 5, 6, 69], "preserv": 60, "pretrainedtokenizerbas": [7, 12], "print": [11, 12], "privat": 39, "prob": 41, "probabl": [10, 12, 58, 65], "probestimatorfastdetectgpt": [10, 12], "process": [3, 6, 19, 20, 39, 45, 47, 70], "process_data": [3, 5, 6], "processor": [47, 50], "prometheusscor": [34, 35], "prompt": [20, 21, 30, 31, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 57, 63], "prompt_attack": [20, 52, 57, 63], "prompt_paraphrasing_attack": [20, 52, 57], "promptattack": [20, 21], "promptconfig": [0, 15, 18, 20, 21, 22], "promptparaphrasingattack": [20, 22], "provid": [7, 8, 10, 12, 13, 15, 19, 20, 34, 35, 47, 57, 58, 60], "pt": [58, 70], "public": [15, 20], "purpos": 63, "py": [34, 35, 57, 58, 59, 63, 65, 66, 67, 69, 70], "pypi": 62, "python": [62, 69, 70], "pytorch": 62, "qualiti": [27, 29], "quantil": 39, "queri": 53, "qwen": 59, "qwen2": 59, "qwen2_0_5b": 59, "qwen2_chat_0_5b": [59, 69, 70], "qwen2_chat_7b": 59, "random": [39, 41, 50], "randomli": [3, 5, 6], "rang": 41, "rate": [26, 27], "rather": 65, "raw": [19, 20], "real_crit": [10, 12], "reassign_scor": [34, 35], "recommend": 62, "recurs": [20, 22], "ref_model": [10, 12], "ref_path": [10, 12], "ref_text": [34, 35], "ref_token": [10, 12], "refer": [10, 12], "refscor": [34, 35], "regroup": [3, 5, 6], "regroup_pair": [3, 5, 6], "relat": 63, "relu": 48, "remov": [3, 6], "remove_stopword": [34, 35], "repetit": 69, "repetition_penalti": 69, "residualblock": 48, "resili": 60, "respect": 64, "result": [11, 12, 26, 27, 53, 69, 70], "return": [26, 39, 45, 51, 55, 63, 64, 65, 67], "return_dict": [38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50], "return_loss_list": [27, 29, 34, 35], "reweight": 39, "reweight_logit": 39, "rng": [39, 41, 45, 50], "robust": 60, "roc_curv": [26, 27], "rubric": [34, 35], "run": [24, 26, 27], "run_human_ev": [23, 31, 52], "run_human_eval_plu": [23, 52], "run_pipelin": [24, 25, 26, 27, 29], "same": [3, 5, 6, 57, 64, 65, 67, 69, 70], "sampl": [3, 5, 6, 10, 12, 19, 20, 28, 41, 63, 64, 69, 70], "save": [24, 26, 27, 70], "scale": 47, "scale_dimens": 47, "scale_vector": 47, "scheme": [15, 19, 20, 56, 58, 68, 69, 70, 71], "score": [10, 11, 12, 34, 35, 39, 45, 47, 50, 67], "score_batch": [34, 35], "score_sequ": [39, 45, 50], "scorer": [27, 29, 34, 52], "scorer_model": [34, 35], "scorer_token": [34, 35], "scorer_util": [34, 52], "scores_list": 36, "scoring_model": [10, 12], "scoring_token": [10, 12], "scottaaronson": 60, "script": [69, 70], "section": [69, 70], "see": [34, 35, 57, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70], "seed": [3, 5, 6, 36, 39, 41, 45, 50], "seed_rng": 41, "self": [63, 64, 65, 67], "selfscor": [34, 35], "semant": 60, "semscorescor": [34, 35], "sentenc": 47, "sequence_length": 41, "set": [26, 27, 58, 69, 70], "set_attack_nam": [15, 20], "set_watermarking_scheme_nam": [15, 20], "setter": [15, 20], "sh": [69, 70], "share": 64, "shot": 58, "should": [15, 19, 20, 63, 64, 65, 67, 69, 70], "shuffl": 39, "shuffle_posit": [34, 35], "signatur": [63, 64, 65, 67], "silent": [28, 55], "similar": 70, "sinc": [60, 64], "sir": [43, 52, 60], "sirconfig": 47, "sirlogitsprocessor": 47, "sirutil": 47, "size": [4, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 69], "skip": 69, "skip_cach": [24, 27, 69], "skip_train_split": [24, 27, 69], "sklearn": [26, 27], "smi": 62, "softmax": 65, "some": [15, 20], "sourc": 60, "space": [34, 35], "specif": [15, 17, 20, 56, 57, 63], "specifi": [55, 69, 70], "sphinx": 52, "split": [4, 26, 27, 47, 64, 69], "standard": [7, 8, 10, 12, 13, 15, 20, 34, 35], "start": 69, "still": 69, "store": 69, "str": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 55, 63], "string": 69, "structur": [60, 67], "support": [69, 70], "supported_model": 53, "sweet": [43, 52, 60], "sweet_config": 50, "sweet_logitsprocessor": 50, "sweet_util": 50, "system": 51, "system_cont": 53, "system_prompt": [0, 51], "t": [45, 50, 70], "take": [15, 19, 20, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 67, 69], "taken": 60, "talk": 60, "tanh": 47, "target": [26, 27, 69], "target_fpr": [26, 27, 28], "temperatur": [53, 57, 69], "templat": 51, "template_typ": 51, "tensor": [10, 12, 41, 45, 50], "test": [4, 26, 27, 56, 64, 69], "test_detector": [23, 52, 62, 70], "test_fast_detect_gpt_detector": 70, "test_fract": [3, 6], "test_res_dir": 70, "test_siz": 4, "test_text_qu": [23, 52], "test_zero_shot_detector": 70, "text": [3, 6, 7, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 27, 29, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 58, 63, 64, 65, 69], "text_field": [3, 4, 5, 6], "text_list1": [34, 35], "text_list2": [34, 35], "text_quality_evalu": [23, 27, 29, 52], "text_quality_pipelin": [27, 52], "textqualitypipelin": [27, 29], "than": [64, 65], "them": [26, 27], "thi": [15, 20, 37, 52, 60, 63, 64, 69, 70], "threshold": [7, 8, 10, 11, 12, 13, 26, 27, 41, 65, 69], "throw": 37, "thu": [60, 67], "to_disk": [28, 55], "todo": [62, 69, 70], "token": [0, 7, 12, 17, 19, 20, 30, 31, 34, 35, 39, 41, 45, 47, 50, 51, 54, 69], "tokenized_text": 50, "top": [39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 69], "top_k": 69, "top_p": 69, "torch": [7, 10, 12, 17, 19, 20, 39, 41, 45, 47, 48, 50, 62, 67], "torchaudio": 62, "torchvis": 62, "total": [45, 69], "track": [69, 70], "train": [4, 58, 64, 69], "train_fract": [3, 6], "train_siz": 4, "transform": [7, 12, 19, 20, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 54], "transform_chat_template_with_prompt": 51, "transform_model": [46, 47, 52], "transform_model_input_dim": 47, "transform_model_nam": 47, "transformers_config": [39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52], "transformersconfig": 54, "transformmodel": [47, 48], "true": [3, 5, 6, 24, 26, 27, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 64, 69], "tune": [59, 70], "tupl": [7, 8, 10, 11, 12, 13, 17, 19, 20, 34, 35, 38, 39, 45, 50, 65], "turbo": 53, "two": [3, 5, 6], "type": 51, "u": [41, 70], "under": [63, 65, 67, 69, 70], "understand": 67, "unwatermark": 38, "url": 62, "us": [4, 7, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 24, 26, 27, 28, 34, 35, 37, 39, 41, 42, 47, 51, 56, 57, 58, 63, 64, 65, 69, 70], "use_chat_templ": [0, 51], "user_prompt": 0, "util": [15, 16, 17, 18, 19, 20, 21, 22, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52], "v": 47, "valu": [41, 69, 70], "variabl": [58, 65, 67], "vector": [34, 35, 47], "version": [15, 20, 59, 62], "via": 58, "vocab": 39, "vocab_s": [39, 41, 45, 47, 50, 54], "vocabulari": 41, "wa": 70, "wai": [7, 8, 10, 12, 13, 15, 20, 34, 35], "watermark": [8, 10, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 52, 56, 58, 62, 64, 68], "watermark_bas": [60, 62, 69, 70], "watermark_config": 64, "watermark_detector": [12, 52, 58, 70], "watermark_dip": 60, "watermark_exp": 60, "watermark_kgw": [60, 70], "watermark_mapping_nam": [37, 67], "watermark_name_from_alg_nam": 37, "watermark_schem": [62, 69, 70], "watermark_sir": 60, "watermark_sweet": 60, "watermarkdetector": [12, 13], "watermarking_schem": [2, 12, 13, 15, 16, 18, 19, 20, 21, 22, 67], "watermarking_scheme_nam": [2, 15, 20], "we": [3, 4, 6, 60, 64, 70], "websit": 62, "weight": [58, 70], "weights_checkpoint": [9, 12, 70], "what": 67, "when": [37, 69, 70], "where": [57, 63, 64, 65, 69, 70], "whether": [11, 12, 28, 51, 69], "which": [63, 64, 69], "whl": 62, "who": 60, "without": [4, 56], "word": [47, 69], "word_to_idf": [34, 35], "written": [7, 12, 64, 65], "wrote": 60, "www": 60, "x": 48, "xlarg": [34, 35], "yet": 64, "you": [63, 65], "your": [62, 69], "z": [45, 50], "z_score": [39, 45], "z_threshold": [39, 45, 47, 50], "zephyr": 59, "zero": [11, 12, 58]}, "titles": ["configs", "detector_benchmark.conf", "detector_benchmark.create_dataset", "detector_benchmark.dataset_loader.cnn_dataset", "detector_benchmark.dataset_loader.dataset_loader_utils", "detector_benchmark.dataset_loader.fake_true_dataset", "detector_benchmark.dataset_loader", "detector_benchmark.detector.bert_detector", "detector_benchmark.detector.detector", "detector_benchmark.detector.detector_loader", "detector_benchmark.detector.fast_detect_gpt", "detector_benchmark.detector.gpt_zero_detector", "detector_benchmark.detector", "detector_benchmark.detector.watermark_detector", "detector_benchmark.generate_mappings", "detector_benchmark.generation.article_generator", "detector_benchmark.generation.attack_loader", "detector_benchmark.generation.gen_loader", "detector_benchmark.generation.gen_params_attack", "detector_benchmark.generation.generator", "detector_benchmark.generation", "detector_benchmark.generation.prompt_attack", "detector_benchmark.generation.prompt_paraphrasing_attack", "detector_benchmark", "detector_benchmark.pipeline.create_dataset_pipeline", "detector_benchmark.pipeline.experiment_pipeline", "detector_benchmark.pipeline.experiment_test_detector_pipeline", "detector_benchmark.pipeline", "detector_benchmark.pipeline.pipeline_utils", "detector_benchmark.pipeline.text_quality_pipeline", "detector_benchmark.run_human_eval", "detector_benchmark.run_human_eval_plus", "detector_benchmark.test_detector", "detector_benchmark.test_text_quality", "detector_benchmark.text_quality_evaluation", "detector_benchmark.text_quality_evaluation.scorer", "detector_benchmark.text_quality_evaluation.scorer_utils", "detector_benchmark.watermark.auto_watermark", "detector_benchmark.watermark.base", "detector_benchmark.watermark.dip.dip", "detector_benchmark.watermark.dip", "detector_benchmark.watermark.exp.exp", "detector_benchmark.watermark.exp", "detector_benchmark.watermark", "detector_benchmark.watermark.kgw", "detector_benchmark.watermark.kgw.kgw", "detector_benchmark.watermark.sir", "detector_benchmark.watermark.sir.sir", "detector_benchmark.watermark.sir.transform_model", "detector_benchmark.watermark.sweet", "detector_benchmark.watermark.sweet.sweet", "gen_utils", "API Reference", "openai_utils", "transformers_config", "utils", "LLM Detector benchmark", "List of supported evasion attacks", "List of supported detectors", "List of supported LLMs for generation", "List of supported watermarking schemes", "Class details", "Getting Started", "How to add an attack", "How to add a dataset", "How to add a new detector on the detection benchmark", "How to add a new LLM for generating the benchmark", "How to add a watermarking scheme on the benchmark", "How to extend the benchmark", "How to generate the benchmark", "How to test a detector", "List of supported generators, detectors, attacks and watermarks"], "titleterms": {"add": [63, 64, 65, 66, 67, 68], "an": 63, "api": 52, "article_gener": 15, "attack": [57, 63, 69, 71], "attack_load": 16, "attribut": [37, 53], "auto_watermark": 37, "base": 38, "benchmark": [56, 62, 65, 66, 67, 68, 69, 70], "bert_detector": 7, "class": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 61], "cnn_dataset": 3, "conf": 1, "config": 0, "configur": [69, 70], "content": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55], "creat": 62, "create_dataset": 2, "create_dataset_pipelin": 24, "dataset": 64, "dataset_load": [3, 4, 5, 6], "dataset_loader_util": 4, "depend": 69, "detail": 61, "detect": 65, "detector": [7, 8, 9, 10, 11, 12, 13, 56, 58, 62, 65, 70, 71], "detector_benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "detector_load": 9, "dip": [39, 40], "each": 70, "evas": 57, "exp": [41, 42], "experiment_pipelin": 25, "experiment_test_detector_pipelin": 26, "extend": 68, "extra": 69, "fake_true_dataset": 5, "fast_detect_gpt": 10, "featur": 56, "function": [2, 4, 14, 28, 30, 31, 32, 33, 36, 37, 51, 55], "gen_load": 17, "gen_params_attack": 18, "gen_util": 51, "gener": [15, 16, 17, 18, 19, 20, 21, 22, 59, 62, 66, 69, 71], "generate_map": 14, "get": 62, "gpt_zero_detector": 11, "how": [63, 64, 65, 66, 67, 68, 69, 70], "instal": 62, "kgw": [44, 45], "list": [57, 58, 59, 60, 71], "llm": [56, 58, 59, 66], "modul": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 45, 47, 48, 50, 51, 53, 54, 55], "new": [65, 66], "openai_util": 53, "packag": [6, 12, 20, 27, 34, 40, 42, 44, 46, 49], "paramet": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 26, 27, 28, 69, 70], "pipelin": [24, 25, 26, 27, 28, 29], "pipeline_util": 28, "prompt_attack": 21, "prompt_paraphrasing_attack": 22, "refer": 52, "return": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28], "run_human_ev": 30, "run_human_eval_plu": 31, "scheme": [60, 67], "scorer": 35, "scorer_util": 36, "shot": 70, "sir": [46, 47, 48], "specif": 70, "start": 62, "submodul": [6, 12, 20, 23, 27, 34, 40, 42, 43, 44, 46, 49], "subpackag": [23, 43], "support": [57, 58, 59, 60, 71], "sweet": [49, 50], "test": [62, 70], "test_detector": 32, "test_text_qu": 33, "text_quality_evalu": [34, 35, 36], "text_quality_pipelin": 29, "train": 70, "transform_model": 48, "transformers_config": 54, "util": 55, "watermark": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 60, 67, 69, 70, 71], "watermark_detector": 13, "without": 69, "zero": 70}})